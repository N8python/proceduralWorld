{"version":3,"sources":["webpack://ENABLE3D/webpack/universalModuleDefinition","webpack://ENABLE3D/../node_modules/eventemitter3/index.js","webpack://ENABLE3D/./node_modules/eventemitter3/index.js","webpack://ENABLE3D/external \"ConvexGeometry\"","webpack://ENABLE3D/external \"THREE\"","webpack://ENABLE3D/webpack/bootstrap","webpack://ENABLE3D/webpack/runtime/define property getters","webpack://ENABLE3D/webpack/runtime/hasOwnProperty shorthand","webpack://ENABLE3D/webpack/runtime/make namespace object","webpack://ENABLE3D/../common/dist/logger.js","webpack://ENABLE3D/../common/dist/extendedObject3D.js","webpack://ENABLE3D/../common/dist/extendedMesh.js","webpack://ENABLE3D/../common/dist/extendedGroup.js","webpack://ENABLE3D/./src/constraints.ts","webpack://ENABLE3D/./src/three-to-ammo.js","webpack://ENABLE3D/../common/dist/defaultMaterial.js","webpack://ENABLE3D/../common/dist/factories.js","webpack://ENABLE3D/./src/collisionEvents.ts","webpack://ENABLE3D/./src/convexObjectBreaker.ts","webpack://ENABLE3D/../common/dist/wasmLoader.js","webpack://ENABLE3D/../common/dist/physicsLoader.js","webpack://ENABLE3D/../common/dist/applyMixins.js","webpack://ENABLE3D/./src/raycaster/raycaster.ts","webpack://ENABLE3D/./src/raycaster/closestRayResultCallback.ts","webpack://ENABLE3D/./src/raycaster/allHitsRayResultCallback.ts","webpack://ENABLE3D/./src/lib/Clock.ts","webpack://ENABLE3D/./src/physics.ts","webpack://ENABLE3D/./src/shapes.ts","webpack://ENABLE3D/./src/debugDrawer.ts","webpack://ENABLE3D/./src/torusShape.ts","webpack://ENABLE3D/../common/dist/physicsBody.js"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__428__","__WEBPACK_EXTERNAL_MODULE__152__","has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","once","this","addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","length","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","arguments","removeListener","undefined","apply","j","on","removeAllListeners","off","prefixed","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","r","Symbol","toStringTag","value","msg","console","error","ExtendedObject3D","Object3D","super","vector3","Vector3","isGroup","hasBody","fragmentDepth","breakable","fractureImpulse","anims","_currentAnimation","_animationActions","Map","id","warn","animationPlay","theta","worldTheta","phi","worldPhi","getWorldDirection","Math","atan2","x","z","acos","y","current","add","animation","animationAdd","play","transitionDuration","loop","mixer","animationMixer","_animationMixer","AnimationMixer","set","clipAction","next","reset","crossFadeFrom","clampWhenFinished","setLoop","LoopOnce","ExtendedMesh","Mesh","geometry","material","ExtendedGroup","Group","isMesh","Constraints","worldTransform","physicsWorld","tmpBtVector3","Ammo","btVector3","v","lock","bodyA","bodyB","disableCollisionsBetweenLinkedBodies","fixed","pointToPoint","config","hinge","slider","spring","coneTwist","frameA","frameB","dof","offset","center","transformB","btTransform","setIdentity","v1","getWorldTransform","getOrigin","v2","dx","dy","dz","setOrigin","transformA","getCenterOfMassTransform","inverse","op_mul","zero","angularLowerLimit","angularUpperLimit","transform","getTransform","ammo","setRotation","getRotation","constraint","btFixedConstraint","addConstraint","pivotA","pivotB","pivotV3","targetPivotV3","btPoint2PointConstraint","axisA","axisB","axisV3","targetAxisV3","btHingeConstraint","linearLowerLimit","lll","linearUpperLimit","lul","all","aul","rotationA","setEulerZYX","rotationB","btSliderConstraint","setLowerLinLimit","setUpperLinLimit","setLowerAngLimit","setUpperAngLimit","stiffness","damping","angularLock","enableSpring","btGeneric6DofSpringConstraint","setValue","setLinearLowerLimit","setLinearUpperLimit","setAngularLowerLimit","setAngularUpperLimit","log","toAmmoV3","PI","setStiffness","setDamping","rbAFrame","rbBFrame","btConeTwistConstraint","setAngularOnly","btGeneric6DofConstraint","destroy","TYPE","FIT","createHullShape","vertex","matrix","Matrix4","vertices","matrices","matrixWorld","options","type","_setOptions","fit","bounds","_computeBounds","btVertex","originalHull","btConvexHullShape","setMargin","margin","addVectors","max","min","multiplyScalar","vertexCount","maxVertices","hullMaxVertices","p","components","fromArray","isLastVertex","random","applyMatrix4","sub","addPoint","collisionShape","getNumVertices","shapeHull","btShapeHull","buildHull","getPointer","getVertexPointer","numVertices","_finishCollisionShape","_computeScale","createHACDShapes","vector","indexes","scale","triCount","hacd","HACD","SetCompacityWeight","compacityWeight","SetVolumeWeight","volumeWeight","SetNClusters","nClusters","SetNVerticesPerCH","nVerticesPerCH","SetConcavity","concavity","points","_malloc","triangles","SetPoints","SetTriangles","SetNPoints","SetNTriangles","pptr","tptr","HEAPF64","indices","HEAP32","Compute","_free","GetNClusters","shapes","hull","nPoints","GetNPointsCH","nTriangles","GetNTrianglesCH","hullPoints","hullTriangles","GetCH","pi","px","py","pz","createVHACDShapes","vhacd","VHACD","params","Parameters","set_m_resolution","resolution","set_m_depth","depth","set_m_concavity","set_m_planeDownsampling","planeDownsampling","set_m_convexhullDownsampling","convexhullDownsampling","set_m_alpha","alpha","set_m_beta","beta","set_m_gamma","gamma","set_m_pca","pca","set_m_mode","mode","set_m_maxNumVerticesPerCH","maxNumVerticesPerCH","set_m_minVolumePerCH","minVolumePerCH","set_m_convexhullApproximation","convexhullApproximation","set_m_oclAcceleration","oclAcceleration","nHulls","GetNConvexHulls","ch","ConvexHull","GetConvexHull","get_m_nPoints","get_m_points","createTriMeshShape","va","vb","vc","bta","btb","btc","triMesh","btTriangleMesh","index","ai","bi","ci","addTriangle","localScale","setScaling","concave","btBvhTriangleMeshShape","btConvexTriangleMeshShape","resources","iterateGeometries","cb","parseInt","REVISION","copy","invert","getInverse","setFromMatrixScale","traverse","mesh","includeInvisible","el","object3D","visible","identity","updateWorldMatrix","multiplyMatrices","isBufferGeometry","attributes","position","array","elements","Box3","minX","minY","minZ","maxX","maxY","maxZ","_iterateVertices","_defaultMaterial","MeshLambertMaterial","color","__rest","s","e","t","indexOf","propertyIsEnumerable","Factories","scene","isHeadless","defaultMaterial","plane","planeConfig","materialConfig","makePlane","box","boxConfig","makeBox","sphere","sphereConfig","makeSphere","cylinder","cylinderConfig","makeCylinder","cone","coneConfig","makeCone","torus","torusConfig","makeTorus","extrude","extrudeConfig","makeExtrude","addMesh","existing","object","addExisting","addPlane","addBox","ground","groundConfig","addGround","addSphere","addCylinder","addCone","addTorus","addExtrude","addMaterial","isArray","Line","Points","castShadow","receiveShadow","shape","autoCenter","rest","bevelEnabled","ExtrudeBufferGeometry","assign","createMesh","PlaneBufferGeometry","width","height","widthSegments","heightSegments","side","DoubleSide","SphereBufferGeometry","radius","phiStart","phiLength","thetaStart","thetaLength","BoxBufferGeometry","depthSegments","rotateX","CylinderBufferGeometry","radiusTop","radiusBottom","radiusSegments","openEnded","ConeBufferGeometry","TorusBufferGeometry","tube","radialSegments","tubularSegments","arc","keys","MeshBasicMaterial","basic","MeshNormalMaterial","normal","MeshStandardMaterial","standard","lambert","MeshPhongMaterial","phong","physical","MeshPhysicalMaterial","MeshToonMaterial","toon","LineBasicMaterial","line","PointsMaterial","custom","CollisionEvents","object1","object2","eventCallback","body","checkCollisions","data","bodies","newConvexGeometry","window","THREE","ConvexGeometry","ConvexObjectBreaker","minSizeForBreak","smallDelta","tempLine1","Line3","tempPlane1","Plane","tempPlane2","tempPlane_Cut","tempCM1","tempCM2","tempVector3","tempVector3_2","tempVector3_3","tempVector3_P0","tempVector3_P1","tempVector3_P2","tempVector3_N0","tempVector3_N1","tempVector3_AB","tempVector3_CB","tempResultObjects","segments","constructor","prepareBreakableObject","mass","velocity","angularVelocity","userData","ammoPhysicsData","clone","subdivideByImpact","pointOfImpact","maxRadialIterations","maxRandomIterations","debris","setFromCoplanarPoints","maxTotalIterations","scope","subdivideRadial","subObject","startAngle","endAngle","numIterations","angle","constant","applyAxisAngle","cutByPlane","obj1","obj2","output","coords","normals","numPoints","numFaces","getIndex","getVertexIndex","faceIdx","vert","idx","points1","points2","delta","numPointPairs","p0","p1","n0","n1","b1","c1","b2","c2","dot","localPlane","updateMatrix","transformPlaneToLocalSpace","segment","i0","i1","mark0","distanceToPoint","mark1","start","end","intersection","intersectLine","segmentedObject1","segmentedObject2","newMass","radius1","numPoints1","divideScalar","radius2","numPoints2","numObjects","quaternion","transformFreeVector","m","transformFreeVectorInverse","transformTiedVectorInverse","resultPlane","referencePoint","coplanarPoint","wasmSupported","WebAssembly","instantiate","Module","Uint8Array","of","Instance","path","doneCallback","url","tag","document","createElement","onload","onerror","Error","async","src","head","appendChild","loadScriptAsync","PhysicsLoader","callback","__loadPhysics","then","derivedCtor","baseCtors","forEach","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","Raycaster","physics","_btRayFrom","_btRayTo","_btRayCallback","hasHit","ClosestRayResultCallback","AllHitsRayResultCallback","rayTest","ClosestRaycaster","AllHitsRaycaster","h","get_m_hitPointWorld","get_m_hitNormalWorld","castObject","get_m_collisionObject","btRigidBody","threeObject","size","hh","at","getHitPointsWorld","threeObjects","objects","get_m_collisionObjects","rb","Clock","autoStart","startTime","oldTime","elapsedTime","running","performance","Date","now","getElapsedTime","getDelta","diff","newTime","AmmoPhysics","rigidBodies","earlierDetectedCollisions","complexShapes","gravity","tmpEuler","Euler","tmpQuaternion","Quaternion","tmpVector3","tmpVector3a","tmpMatrix4","tmpMatrix4a","tmpBtQuaternion","btQuaternion","emptyV3","impactPoint","impactNormal","b","includes","isSoftBody","removeSoftBody","removeRigidBody","destructor","splice","setupPhysicsWorld","convexBreaker","objectsToRemove","numObjectsToRemove","collisionEvents","collisionFlags","translateX","constraints","debugDrawer","world","debugDrawMode","drawOnTop","maxBufferSize","BufferGeometry","Float32Array","colors","setAttribute","BufferAttribute","setUsage","StaticDrawUsage","vertexColors","depthTest","LineSegments","renderOrder","frustumCulled","enabled","DebugDrawer","drawLine","bind","drawContactPoint","reportErrorWarning","draw3dText","setDebugMode","getDebugMode","setDebugDrawer","remove","needsUpdate","debugDrawWorld","setDrawRange","from","to","heap","HEAPF32","g","fromX","fromY","fromZ","setXYZ","toX","toY","toZ","pointOnB","normalOnB","distance","_lifeTime","warningString","Pointer_stringify","warnedOnce","_location","_textString","debugMode","update","softBodies","collisionConfiguration","btDefaultCollisionConfiguration","dispatcher","btCollisionDispatcher","broadphase","btDbvtBroadphase","solver","btSequentialImpulseConstraintSolver","btDiscreteDynamicsWorld","btSoftBodyRigidBodyCollisionConfiguration","softBodySolver","btDefaultSoftBodySolver","btSoftRigidDynamicsWorld","setGravity","parent","setTimeout","updatePhysics","detectCollisions","deltaTime","stepSimulation","maxSubSteps","fixedTimeStep","objThree","ms","getMotionState","didUpdate","_emitUpdateEvents","eventEmitter","isKinematicObject","needUpdate","getWorldQuaternion","getWorldPosition","w","setWorldTransform","skipUpdate","isStaticObject","q","ignoreScale","getCollisionShape","getLocalScaling","compose","multiply","decompose","detectedCollisions","getDispatcher","numManifolds","getNumManifolds","contactManifold","getManifoldByIndexInternal","numContacts","getNumContacts","rb0","getBody0","rb1","getBody1","threeObject0","threeObject1","checkCollisions0","checkCollisions1","breakable0","breakable1","fractureImpulse0","fractureImpulse1","checkBreakable","contact","maxImpulse","contactPoint","getContactPoint","getDistance","impulse","getAppliedImpulse","get_m_positionWorldOnB","get_m_normalWorldOnB","sort","combinedName","find","collision","MAX_FRAGMENT_DEPTH","physicsBody","vel","getLinearVelocity","angVel","getAngularVelocity","fragment","createDebrisFromBreakableObject","removeDebris","split","obj0","enable","disable","setup","collider","addCollider","addConstraints","raycaster","defaultParams","test","parameters","quat","axis","btHalfExtents","isGeometry","fromGeometry","vertexArray","matrixArray","indexArray","extractData","btBoxShape","btSphereShape","btCylinderShape","btCylinderShapeX","btCylinderShapeZ","btConeShape","btConeShapeX","btConeShapeZ","btCapsuleShape","btCapsuleShapeX","btCapsuleShapeZ","SIMD_PI","subdivisions","gap","sqrt","cos","cylinderShape","compoundShape","btCompoundShape","forward","rotation","rotate","addChildShape","createTorusShape","mergeCollisionShapesToCompoundShape","collisionShapes","pos","getWorldScale","toString","compound","collisionGroup","collisionMask","addChildren","map","createCollisionShape","localTransform","finishCollisionShape","rigidBody","collisionShapeToRigidBody","addRigidBodyToWorld","prepareThreeObjectForCollisionShape","cs","children","child","addRigidBody","ptr","values","errors","_needUpdate","tmpBtVector3_1","need","updateCallback","setupEventEmitter","onUpdateEvent","collisionCallback","onCollision","setFromEuler","ammoQuat","q1","normalize","setLinearVelocity","setAngularVelocity","applyCentralImpulse","applyCentralForce","applyCentralLocalForce","relativePosition","applyImpulse","applyLocalTorque","applyTorque","applyTorqueImpulse","setCollisionFlags","getCollisionFlags","setRestitution","setFriction","linear","angular","setLinearFactor","setAngularFactor","threshold","setCcdMotionThreshold","setCcdSweptSphereRadius","setLocalScaling","disableDeactivation","motionState","btDefaultMotionState","localInertia","calculateLocalInertia","rbInfo","btRigidBodyConstructionInfo","setActivationState"],"mappings":"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","file":"enable3d.ammoPhysics.0.22.0-dev.1.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"THREE\", \"ConvexGeometry\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ENABLE3D\"] = factory(require(\"THREE\"), require(\"ConvexGeometry\"));\n\telse\n\t\troot[\"ENABLE3D\"] = factory(root[\"THREE\"], root[\"ConvexGeometry\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__428__, __WEBPACK_EXTERNAL_MODULE__152__) {\nreturn ","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__152__;","module.exports = __WEBPACK_EXTERNAL_MODULE__428__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const logger = (msg) => {\r\n    console.error(`%c [enable3d] ${msg} `, 'background: #222; color: #bada55');\r\n};\r\nexport default logger;\r\n//# sourceMappingURL=logger.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { AnimationMixer, Object3D, Vector3, LoopOnce } from 'three';\r\n/**\r\n * Extends the Object3D class from THREE.js and implements properties from Line, Mesh and Points.\r\n */\r\nexport class ExtendedObject3D extends Object3D {\r\n    constructor() {\r\n        super();\r\n        this.vector3 = new Vector3();\r\n        this.isGroup = false;\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.anims = {}; // deprecated\r\n        this._currentAnimation = '';\r\n        this._animationActions = new Map();\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** setAction(name) is deprecated. Use animation.play(name) instead! */\r\n    setAction(name) {\r\n        console.warn('[enable3d] setAction(name) is deprecated. Use animation.play(name) instead!');\r\n        this.animationPlay(name);\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n    get animation() {\r\n        return {\r\n            current: this._currentAnimation,\r\n            add: (key, animation) => this.animationAdd(key, animation),\r\n            play: (name, transitionDuration = 500, loop = true) => this.animationPlay(name, transitionDuration, loop),\r\n            mixer: this.animationMixer\r\n        };\r\n    }\r\n    set animationMixer(animationMixer) {\r\n        this._animationMixer = animationMixer;\r\n    }\r\n    get animationMixer() {\r\n        if (!this._animationMixer)\r\n            this._animationMixer = new AnimationMixer(this);\r\n        return this._animationMixer;\r\n    }\r\n    animationAdd(key, animation) {\r\n        this._animationActions.set(key, this.animationMixer.clipAction(animation));\r\n    }\r\n    animationPlay(name, transitionDuration = 500, loop = true) {\r\n        const next = this._animationActions.get(name);\r\n        const current = this._animationActions.get(this._currentAnimation);\r\n        if (next) {\r\n            next.reset();\r\n            if (current) {\r\n                next.crossFadeFrom(current, transitionDuration / 1000, true);\r\n                next.clampWhenFinished = true;\r\n            }\r\n            if (!loop)\r\n                next.setLoop(LoopOnce, 0);\r\n            next.play();\r\n        }\r\n        this._currentAnimation = name;\r\n    }\r\n}\r\nexport default ExtendedObject3D;\r\n//# sourceMappingURL=extendedObject3D.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Mesh, Vector3 } from 'three';\r\nexport class ExtendedMesh extends Mesh {\r\n    constructor(geometry, material) {\r\n        super(geometry, material);\r\n        this.vector3 = new Vector3();\r\n        this.isGroup = false;\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n    /** Returns all values relative to the world. */\r\n    get world() {\r\n        return {\r\n            theta: this.worldTheta,\r\n            phi: this.worldPhi\r\n        };\r\n    }\r\n    /** Get the theta relative to the world. */\r\n    get worldTheta() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.atan2(this.vector3.x, this.vector3.z);\r\n    }\r\n    /** Get the phi relative to the world. */\r\n    get worldPhi() {\r\n        this.getWorldDirection(this.vector3);\r\n        return Math.acos(this.vector3.y);\r\n    }\r\n}\r\n//# sourceMappingURL=extendedMesh.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { Group } from 'three';\r\nexport class ExtendedGroup extends Group {\r\n    constructor() {\r\n        super();\r\n        this.isMesh = false;\r\n        this.hasBody = false;\r\n        // convex object breaking\r\n        this.fragmentDepth = 0;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.name = `object-${this.id}`;\r\n    }\r\n}\r\n//# sourceMappingURL=extendedGroup.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\n// Inspired by https://github.com/donmccurdy/aframe-physics-system/blob/master/src/components/ammo-constraint.js\r\n\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\nimport { XYZ } from '@enable3d/common/dist/types'\r\n\r\nexport default class Constraints {\r\n  public tmpBtVector3 = new Ammo.btVector3()\r\n\r\n  constructor(public worldTransform: Ammo.btTransform, public physicsWorld: Ammo.btDiscreteDynamicsWorld) {}\r\n\r\n  private toAmmoV3(v?: XYZ, d: number = 0) {\r\n    return new Ammo.btVector3(\r\n      typeof v?.x !== 'undefined' ? v.x : d,\r\n      typeof v?.y !== 'undefined' ? v.y : d,\r\n      typeof v?.z !== 'undefined' ? v.z : d\r\n    )\r\n  }\r\n\r\n  public get addConstraints() {\r\n    return {\r\n      lock: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.lock(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      fixed: (bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies?: boolean) =>\r\n        this.fixed(bodyA, bodyB, disableCollisionsBetweenLinkedBodies),\r\n      pointToPoint: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.pointToPoint(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      hinge: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          pivotA?: XYZ\r\n          pivotB?: XYZ\r\n          axisA?: XYZ\r\n          axisB?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.hinge(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      slider: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA?: XYZ\r\n          frameB?: XYZ\r\n          linearLowerLimit?: number\r\n          linearUpperLimit?: number\r\n          angularLowerLimit?: number\r\n          angularUpperLimit?: number\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.slider(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      spring: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          stiffness?: number\r\n          damping?: number\r\n          angularLock?: boolean\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n          enableSpring?: boolean\r\n        } = {},\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.spring(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      coneTwist: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config: {\r\n          frameA: XYZ\r\n          frameB: XYZ\r\n        } = { frameA: {}, frameB: {} },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.coneTwist(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies),\r\n      dof: (\r\n        bodyA: PhysicsBody,\r\n        bodyB: PhysicsBody,\r\n        config?: {\r\n          linearLowerLimit?: XYZ\r\n          linearUpperLimit?: XYZ\r\n          angularLowerLimit?: XYZ\r\n          angularUpperLimit?: XYZ\r\n          center?: boolean\r\n          offset?: XYZ\r\n        },\r\n        disableCollisionsBetweenLinkedBodies?: boolean\r\n      ) => this.dof(bodyA, bodyB, config, disableCollisionsBetweenLinkedBodies)\r\n    }\r\n  }\r\n\r\n  private getTransform(\r\n    bodyA: Ammo.btRigidBody,\r\n    bodyB: Ammo.btRigidBody,\r\n    offset: { x: number; y: number; z: number } = { x: 0, y: 0, z: 0 },\r\n    center: boolean = false\r\n  ) {\r\n    // @ts-ignore\r\n    offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const centerVector = (v1: Ammo.btVector3, v2: Ammo.btVector3) => {\r\n      var dx = (v1.x() - v2.x()) / 2 + offset.x\r\n      var dy = (v1.y() - v2.y()) / 2 + offset.y\r\n      var dz = (v1.z() - v2.z()) / 2 + offset.z\r\n      return new Ammo.btVector3(dx, dy, dz)\r\n    }\r\n\r\n    const transformB = new Ammo.btTransform()\r\n    transformB.setIdentity()\r\n\r\n    if (!center) {\r\n      // offset\r\n      transformB.setOrigin(new Ammo.btVector3(offset.x, offset.y, offset.z))\r\n\r\n      const transformA = bodyA\r\n        .getCenterOfMassTransform()\r\n        .inverse()\r\n        .op_mul(bodyB.getWorldTransform())\r\n        .op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    } else {\r\n      const center = centerVector(bodyA.getWorldTransform().getOrigin(), bodyB.getWorldTransform().getOrigin())\r\n\r\n      const transformB = new Ammo.btTransform()\r\n      transformB.setIdentity()\r\n      transformB.setOrigin(center)\r\n\r\n      const transformA = bodyA\r\n        .getCenterOfMassTransform()\r\n        .inverse()\r\n        .op_mul(bodyB.getWorldTransform())\r\n\r\n      transformA.op_mul(transformB)\r\n\r\n      return { transformA: transformA, transformB: transformB }\r\n    }\r\n  }\r\n\r\n  private lock(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const zero = { x: 0, y: 0, z: 0 }\r\n    return this.dof(\r\n      bodyA,\r\n      bodyB,\r\n      { angularLowerLimit: zero, angularUpperLimit: zero },\r\n      disableCollisionsBetweenLinkedBodies\r\n    )\r\n  }\r\n\r\n  private fixed(bodyA: PhysicsBody, bodyB: PhysicsBody, disableCollisionsBetweenLinkedBodies = true) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n    transform.transformA.setRotation(bodyA.ammo.getWorldTransform().getRotation())\r\n    transform.transformB.setRotation(bodyB.ammo.getWorldTransform().getRotation())\r\n    const constraint = new Ammo.btFixedConstraint(bodyA.ammo, bodyB.ammo, transform.transformA, transform.transformB)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private pointToPoint(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const constraint = new Ammo.btPoint2PointConstraint(bodyA.ammo, bodyB.ammo, pivotV3, targetPivotV3)\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private hinge(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      pivotA?: XYZ\r\n      pivotB?: XYZ\r\n      axisA?: XYZ\r\n      axisB?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { pivotA, pivotB, axisA, axisB } = config\r\n    const pivotV3 = new Ammo.btVector3(pivotA?.x || 0, pivotA?.y || 0, pivotA?.z || 0)\r\n    const targetPivotV3 = new Ammo.btVector3(pivotB?.x || 0, pivotB?.y || 0, pivotB?.z || 0)\r\n    const axisV3 = new Ammo.btVector3(axisA?.x || 0, axisA?.y || 0, axisA?.z || 0)\r\n    const targetAxisV3 = new Ammo.btVector3(axisB?.x || 0, axisB?.y || 0, axisB?.z || 0)\r\n    const constraint = new Ammo.btHingeConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      pivotV3,\r\n      targetPivotV3,\r\n      axisV3,\r\n      targetAxisV3,\r\n      true\r\n    )\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  // https://pybullet.org/Bullet/phpBB3/viewtopic.php?f=9&t=12690&p=42152&hilit=btSliderConstraint#p42152\r\n  private slider(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      frameA?: XYZ\r\n      frameB?: XYZ\r\n      linearLowerLimit?: number\r\n      linearUpperLimit?: number\r\n      angularLowerLimit?: number\r\n      angularUpperLimit?: number\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const {\r\n      frameA = {},\r\n      frameB = {},\r\n      linearLowerLimit: lll = 0,\r\n      linearUpperLimit: lul = 0,\r\n      angularLowerLimit: all = 0,\r\n      angularUpperLimit: aul = 0\r\n    } = config\r\n\r\n    const rotationA = transform.transformA.getRotation()\r\n    rotationA.setEulerZYX(frameA.x || 0, frameA.y || 0, frameA.z || 0)\r\n    transform.transformA.setRotation(rotationA)\r\n\r\n    const rotationB = transform.transformB.getRotation()\r\n    rotationB.setEulerZYX(frameB.x || 0, frameB.y || 0, frameB.z || 0)\r\n    transform.transformB.setRotation(rotationB)\r\n\r\n    const constraint = new Ammo.btSliderConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    constraint.setLowerLinLimit(lll)\r\n    constraint.setUpperLinLimit(lul)\r\n    constraint.setLowerAngLimit(all)\r\n    constraint.setUpperAngLimit(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n    return constraint\r\n  }\r\n\r\n  private spring(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      stiffness?: number\r\n      damping?: number\r\n      angularLock?: boolean\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n      enableSpring?: boolean\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const {\r\n      stiffness = 50,\r\n      damping = 0.01,\r\n      angularLock = false,\r\n      linearLowerLimit: lll = {},\r\n      linearUpperLimit: lul = {},\r\n      angularLowerLimit: all = {},\r\n      angularUpperLimit: aul = {},\r\n      offset = {},\r\n      center = false,\r\n      enableSpring = true\r\n    } = config\r\n\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n    const constraint = new Ammo.btGeneric6DofSpringConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    this.tmpBtVector3.setValue(lll.x || 0, lll.y || 0, lll.z || 0)\r\n    constraint.setLinearLowerLimit(this.tmpBtVector3)\r\n\r\n    this.tmpBtVector3.setValue(lul.x || 0, lul.y || 0, lul.z || 0)\r\n    constraint.setLinearUpperLimit(this.tmpBtVector3)\r\n\r\n    if (angularLock) {\r\n      this.tmpBtVector3.setValue(0, 0, 0)\r\n      constraint.setAngularLowerLimit(this.tmpBtVector3)\r\n      constraint.setAngularUpperLimit(this.tmpBtVector3)\r\n    } else {\r\n      console.log(all, aul)\r\n      constraint.setAngularLowerLimit(this.toAmmoV3(all, -Math.PI))\r\n      constraint.setAngularUpperLimit(this.toAmmoV3(aul, Math.PI))\r\n    }\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      constraint.enableSpring(i, enableSpring)\r\n      constraint.setStiffness(i, stiffness)\r\n      constraint.setDamping(i, damping)\r\n    }\r\n\r\n    // I have no idea what setEquilibriumPoint does :/\r\n    // constraint.setEquilibriumPoint()\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private coneTwist(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: { frameA: XYZ; frameB: XYZ },\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { frameA, frameB } = config\r\n\r\n    const rbAFrame = new Ammo.btTransform()\r\n    rbAFrame.setIdentity()\r\n    rbAFrame.getOrigin().setValue(frameA?.x || 0, frameA?.y || 0, frameA?.z || 0)\r\n\r\n    const rbBFrame = new Ammo.btTransform()\r\n    rbBFrame.setIdentity()\r\n    rbBFrame.getOrigin().setValue(frameB?.x || 0, frameB?.y || 0, frameB?.z || 0)\r\n\r\n    const t = this.getTransform(bodyA.ammo, bodyB.ammo)\r\n\r\n    const constraint = new Ammo.btConeTwistConstraint(bodyB.ammo, bodyA.ammo, rbAFrame, rbBFrame)\r\n\r\n    // does not work at all :/\r\n    // constraint.setLimit(-Math.PI / 50, Math.PI / 50)\r\n\r\n    constraint.setAngularOnly(true)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n\r\n  private dof(\r\n    bodyA: PhysicsBody,\r\n    bodyB: PhysicsBody,\r\n    config: {\r\n      linearLowerLimit?: XYZ\r\n      linearUpperLimit?: XYZ\r\n      angularLowerLimit?: XYZ\r\n      angularUpperLimit?: XYZ\r\n      center?: boolean\r\n      offset?: XYZ\r\n    } = {},\r\n    disableCollisionsBetweenLinkedBodies = true\r\n  ) {\r\n    const { offset, center = false } = config\r\n    const off = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    const transform = this.getTransform(bodyA.ammo, bodyB.ammo, off, center)\r\n\r\n    const constraint = new Ammo.btGeneric6DofConstraint(\r\n      bodyA.ammo,\r\n      bodyB.ammo,\r\n      transform.transformA,\r\n      transform.transformB,\r\n      true\r\n    )\r\n\r\n    const { linearLowerLimit, linearUpperLimit, angularLowerLimit, angularUpperLimit } = config\r\n\r\n    const lll = this.toAmmoV3(linearLowerLimit)\r\n    const lul = this.toAmmoV3(linearUpperLimit)\r\n    const all = this.toAmmoV3(angularLowerLimit, -Math.PI)\r\n    const aul = this.toAmmoV3(angularUpperLimit, Math.PI)\r\n\r\n    constraint.setLinearLowerLimit(lll)\r\n    constraint.setLinearUpperLimit(lul)\r\n    constraint.setAngularLowerLimit(all)\r\n    constraint.setAngularUpperLimit(aul)\r\n\r\n    Ammo.destroy(lll)\r\n    Ammo.destroy(lul)\r\n    Ammo.destroy(all)\r\n    Ammo.destroy(aul)\r\n\r\n    this.physicsWorld.addConstraint(constraint, disableCollisionsBetweenLinkedBodies)\r\n\r\n    return constraint\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n * (Includes latest three-to-ammo commit from August 6, 2020)\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2020 Kevin Lee; Project Url: https://github.com/InfiniteLee/three-to-ammo\r\n * @license      {@link https://github.com/InfiniteLee/three-to-ammo/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport { Vector3, Matrix4, Quaternion, Box3, REVISION } from 'three'\r\n;('use strict')\r\n/* global Ammo */\r\n\r\nexport const TYPE = {\r\n  BOX: 'box',\r\n  CYLINDER: 'cylinder',\r\n  SPHERE: 'sphere',\r\n  CAPSULE: 'capsule',\r\n  CONE: 'cone',\r\n  HULL: 'hull',\r\n  HACD: 'hacd', //Hierarchical Approximate Convex Decomposition\r\n  VHACD: 'vhacd', //Volumetric Hierarchical Approximate Convex Decomposition\r\n  MESH: 'mesh',\r\n  HEIGHTFIELD: 'heightfield'\r\n}\r\n\r\nexport const FIT = {\r\n  ALL: 'all', //A single shape is automatically sized to bound all meshes within the entity.\r\n  MANUAL: 'manual' //A single shape is sized manually. Requires halfExtents or sphereRadius.\r\n}\r\n\r\nexport const HEIGHTFIELD_DATA_TYPE = {\r\n  short: 'short',\r\n  float: 'float'\r\n}\r\n\r\nexport const createCollisionShapes = function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n  switch (options.type) {\r\n    case TYPE.BOX:\r\n      return [createBoxShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CYLINDER:\r\n      return [createCylinderShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CAPSULE:\r\n      return [createCapsuleShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.CONE:\r\n      return [createConeShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.SPHERE:\r\n      return [createSphereShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HULL:\r\n      return [createHullShape(vertices, matrices, matrixWorld, options)]\r\n    case TYPE.HACD:\r\n      return createHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.VHACD:\r\n      return createVHACDShapes(vertices, matrices, indexes, matrixWorld, options)\r\n    case TYPE.MESH:\r\n      return [createTriMeshShape(vertices, matrices, indexes, matrixWorld, options)]\r\n    case TYPE.HEIGHTFIELD:\r\n      return [createHeightfieldTerrainShape(options)]\r\n    default:\r\n      console.warn(options.type + ' is not currently supported')\r\n      return []\r\n  }\r\n}\r\n\r\n//TODO: support gimpact (dynamic trimesh) and heightmap\r\n\r\nexport const createBoxShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.BOX\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCylinderShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CYLINDER\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const btHalfExtents = new Ammo.btVector3(options.halfExtents.x, options.halfExtents.y, options.halfExtents.z)\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCylinderShape(btHalfExtents)\r\n      case 'x':\r\n        return new Ammo.btCylinderShapeX(btHalfExtents)\r\n      case 'z':\r\n        return new Ammo.btCylinderShapeZ(btHalfExtents)\r\n    }\r\n    return null\r\n  })()\r\n  Ammo.destroy(btHalfExtents)\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createCapsuleShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CAPSULE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btCapsuleShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btCapsuleShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btCapsuleShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createConeShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.CONE\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    options.halfExtents = _computeHalfExtents(\r\n      _computeBounds(vertices, matrices),\r\n      options.minHalfExtent,\r\n      options.maxHalfExtent\r\n    )\r\n  }\r\n\r\n  const { x, y, z } = options.halfExtents\r\n  const collisionShape = (() => {\r\n    switch (options.cylinderAxis) {\r\n      case 'y':\r\n        return new Ammo.btConeShape(Math.max(x, z), y * 2)\r\n      case 'x':\r\n        return new Ammo.btConeShapeX(Math.max(y, z), x * 2)\r\n      case 'z':\r\n        return new Ammo.btConeShapeZ(Math.max(x, y), z * 2)\r\n    }\r\n    return null\r\n  })()\r\n\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n  return collisionShape\r\n}\r\n\r\nexport const createSphereShape = function (vertices, matrices, matrixWorld, options = {}) {\r\n  options.type = TYPE.SPHERE\r\n  _setOptions(options)\r\n\r\n  let radius\r\n  if (options.fit === FIT.MANUAL && !isNaN(options.sphereRadius)) {\r\n    radius = options.sphereRadius\r\n  } else {\r\n    radius = _computeRadius(vertices, matrices, _computeBounds(vertices, matrices))\r\n  }\r\n\r\n  const collisionShape = new Ammo.btSphereShape(radius)\r\n  _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n\r\n  return collisionShape\r\n}\r\n\r\nexport const createHullShape = (function () {\r\n  const vertex = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, matrixWorld, options = {}) {\r\n    options.type = TYPE.HULL\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hull')\r\n      return null\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n\r\n    const btVertex = new Ammo.btVector3()\r\n    const originalHull = new Ammo.btConvexHullShape()\r\n    originalHull.setMargin(options.margin)\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    let vertexCount = 0\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n    }\r\n\r\n    const maxVertices = options.hullMaxVertices || 100000\r\n    // todo: might want to implement this in a deterministic way that doesn't do O(verts) calls to Math.random\r\n    if (vertexCount > maxVertices) {\r\n      console.warn(`too many vertices for hull shape; sampling ~${maxVertices} from ~${vertexCount} vertices`)\r\n    }\r\n    const p = Math.min(1, maxVertices / vertexCount)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        const isLastVertex = i === vertices.length - 1 && j === components.length - 3\r\n        if (Math.random() <= p || isLastVertex) {\r\n          // always include the last vertex\r\n          vertex\r\n            .set(components[j], components[j + 1], components[j + 2])\r\n            .applyMatrix4(matrix)\r\n            .sub(center)\r\n          btVertex.setValue(vertex.x, vertex.y, vertex.z)\r\n          originalHull.addPoint(btVertex, isLastVertex) // recalc AABB only on last geometry\r\n        }\r\n      }\r\n    }\r\n\r\n    let collisionShape = originalHull\r\n    if (originalHull.getNumVertices() >= 100) {\r\n      //Bullet documentation says don't use convexHulls with 100 verts or more\r\n      const shapeHull = new Ammo.btShapeHull(originalHull)\r\n      shapeHull.buildHull(options.margin)\r\n      Ammo.destroy(originalHull)\r\n      collisionShape = new Ammo.btConvexHullShape(\r\n        Ammo.getPointer(shapeHull.getVertexPointer()),\r\n        shapeHull.numVertices()\r\n      )\r\n      Ammo.destroy(shapeHull) // btConvexHullShape makes a copy\r\n    }\r\n\r\n    Ammo.destroy(btVertex)\r\n\r\n    _finishCollisionShape(collisionShape, options, _computeScale(matrixWorld, options))\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.HACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: hacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('HACD')) {\r\n      console.warn(\r\n        'HACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const hacd = new Ammo.HACD()\r\n    if (options.hasOwnProperty('compacityWeight')) hacd.SetCompacityWeight(options.compacityWeight)\r\n    if (options.hasOwnProperty('volumeWeight')) hacd.SetVolumeWeight(options.volumeWeight)\r\n    if (options.hasOwnProperty('nClusters')) hacd.SetNClusters(options.nClusters)\r\n    if (options.hasOwnProperty('nVerticesPerCH')) hacd.SetNVerticesPerCH(options.nVerticesPerCH)\r\n    if (options.hasOwnProperty('concavity')) hacd.SetConcavity(options.concavity)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n    hacd.SetPoints(points)\r\n    hacd.SetTriangles(triangles)\r\n    hacd.SetNPoints(vertexCount)\r\n    hacd.SetNTriangles(triCount)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n\r\n    hacd.Compute()\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nClusters = hacd.GetNClusters()\r\n\r\n    const shapes = []\r\n    for (let i = 0; i < nClusters; i++) {\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n      const nPoints = hacd.GetNPointsCH(i)\r\n      const nTriangles = hacd.GetNTrianglesCH(i)\r\n      const hullPoints = Ammo._malloc(nPoints * 3 * 8)\r\n      const hullTriangles = Ammo._malloc(nTriangles * 3 * 4)\r\n      hacd.GetCH(i, hullPoints, hullTriangles)\r\n\r\n      const pptr = hullPoints / 8\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = Ammo.HEAPF64[pptr + pi * 3 + 0]\r\n        const py = Ammo.HEAPF64[pptr + pi * 3 + 1]\r\n        const pz = Ammo.HEAPF64[pptr + pi * 3 + 2]\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createVHACDShapes = (function () {\r\n  const vector = new Vector3()\r\n  const center = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.VHACD\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: vhacd')\r\n      return []\r\n    }\r\n\r\n    if (!Ammo.hasOwnProperty('VHACD')) {\r\n      console.warn(\r\n        'VHACD unavailable in included build of Ammo.js. Visit https://github.com/mozillareality/ammo.js for the latest version.'\r\n      )\r\n      return []\r\n    }\r\n\r\n    const bounds = _computeBounds(vertices, matrices)\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    let vertexCount = 0\r\n    let triCount = 0\r\n    center.addVectors(bounds.max, bounds.min).multiplyScalar(0.5)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      vertexCount += vertices[i].length / 3\r\n      if (indexes && indexes[i]) {\r\n        triCount += indexes[i].length / 3\r\n      } else {\r\n        triCount += vertices[i].length / 9\r\n      }\r\n    }\r\n\r\n    const vhacd = new Ammo.VHACD()\r\n    const params = new Ammo.Parameters()\r\n    //https://kmamou.blogspot.com/2014/12/v-hacd-20-parameters-description.html\r\n    if (options.hasOwnProperty('resolution')) params.set_m_resolution(options.resolution)\r\n    if (options.hasOwnProperty('depth')) params.set_m_depth(options.depth)\r\n    if (options.hasOwnProperty('concavity')) params.set_m_concavity(options.concavity)\r\n    if (options.hasOwnProperty('planeDownsampling')) params.set_m_planeDownsampling(options.planeDownsampling)\r\n    if (options.hasOwnProperty('convexhullDownsampling'))\r\n      params.set_m_convexhullDownsampling(options.convexhullDownsampling)\r\n    if (options.hasOwnProperty('alpha')) params.set_m_alpha(options.alpha)\r\n    if (options.hasOwnProperty('beta')) params.set_m_beta(options.beta)\r\n    if (options.hasOwnProperty('gamma')) params.set_m_gamma(options.gamma)\r\n    if (options.hasOwnProperty('pca')) params.set_m_pca(options.pca)\r\n    if (options.hasOwnProperty('mode')) params.set_m_mode(options.mode)\r\n    if (options.hasOwnProperty('maxNumVerticesPerCH')) params.set_m_maxNumVerticesPerCH(options.maxNumVerticesPerCH)\r\n    if (options.hasOwnProperty('minVolumePerCH')) params.set_m_minVolumePerCH(options.minVolumePerCH)\r\n    if (options.hasOwnProperty('convexhullApproximation'))\r\n      params.set_m_convexhullApproximation(options.convexhullApproximation)\r\n    if (options.hasOwnProperty('oclAcceleration')) params.set_m_oclAcceleration(options.oclAcceleration)\r\n\r\n    const points = Ammo._malloc(vertexCount * 3 * 8 + 3)\r\n    const triangles = Ammo._malloc(triCount * 3 * 4)\r\n\r\n    let pptr = points / 8,\r\n      tptr = triangles / 4\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < components.length; j += 3) {\r\n        vector\r\n          .set(components[j + 0], components[j + 1], components[j + 2])\r\n          .applyMatrix4(matrix)\r\n          .sub(center)\r\n        Ammo.HEAPF64[pptr + 0] = vector.x\r\n        Ammo.HEAPF64[pptr + 1] = vector.y\r\n        Ammo.HEAPF64[pptr + 2] = vector.z\r\n        pptr += 3\r\n      }\r\n      if (indexes[i]) {\r\n        const indices = indexes[i]\r\n        for (let j = 0; j < indices.length; j++) {\r\n          Ammo.HEAP32[tptr] = indices[j]\r\n          tptr++\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length / 3; j++) {\r\n          Ammo.HEAP32[tptr] = j\r\n          tptr++\r\n        }\r\n      }\r\n    }\r\n    vhacd.Compute(points, 3, vertexCount, triangles, 3, triCount, params)\r\n    Ammo._free(points)\r\n    Ammo._free(triangles)\r\n    const nHulls = vhacd.GetNConvexHulls()\r\n\r\n    const shapes = []\r\n    const ch = new Ammo.ConvexHull()\r\n    for (let i = 0; i < nHulls; i++) {\r\n      vhacd.GetConvexHull(i, ch)\r\n      const nPoints = ch.get_m_nPoints()\r\n      const hullPoints = ch.get_m_points()\r\n\r\n      const hull = new Ammo.btConvexHullShape()\r\n      hull.setMargin(options.margin)\r\n\r\n      for (let pi = 0; pi < nPoints; pi++) {\r\n        const btVertex = new Ammo.btVector3()\r\n        const px = ch.get_m_points(pi * 3 + 0)\r\n        const py = ch.get_m_points(pi * 3 + 1)\r\n        const pz = ch.get_m_points(pi * 3 + 2)\r\n        btVertex.setValue(px, py, pz)\r\n        hull.addPoint(btVertex, pi === nPoints - 1)\r\n        Ammo.destroy(btVertex)\r\n      }\r\n\r\n      _finishCollisionShape(hull, options, scale)\r\n      shapes.push(hull)\r\n    }\r\n    Ammo.destroy(ch)\r\n    Ammo.destroy(vhacd)\r\n\r\n    return shapes\r\n  }\r\n})()\r\n\r\nexport const createTriMeshShape = (function () {\r\n  const va = new Vector3()\r\n  const vb = new Vector3()\r\n  const vc = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, indexes, matrixWorld, options = {}) {\r\n    options.type = TYPE.MESH\r\n    _setOptions(options)\r\n\r\n    if (options.fit === FIT.MANUAL) {\r\n      console.warn('cannot use fit: manual with type: mesh')\r\n      return null\r\n    }\r\n\r\n    const scale = _computeScale(matrixWorld, options)\r\n\r\n    const bta = new Ammo.btVector3()\r\n    const btb = new Ammo.btVector3()\r\n    const btc = new Ammo.btVector3()\r\n    const triMesh = new Ammo.btTriangleMesh(true, false)\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      const components = vertices[i]\r\n      const index = indexes[i] ? indexes[i] : null\r\n      matrix.fromArray(matrices[i])\r\n      if (index) {\r\n        for (let j = 0; j < index.length; j += 3) {\r\n          const ai = index[j] * 3\r\n          const bi = index[j + 1] * 3\r\n          const ci = index[j + 2] * 3\r\n          va.set(components[ai], components[ai + 1], components[ai + 2]).applyMatrix4(matrix)\r\n          vb.set(components[bi], components[bi + 1], components[bi + 2]).applyMatrix4(matrix)\r\n          vc.set(components[ci], components[ci + 1], components[ci + 2]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      } else {\r\n        for (let j = 0; j < components.length; j += 9) {\r\n          va.set(components[j + 0], components[j + 1], components[j + 2]).applyMatrix4(matrix)\r\n          vb.set(components[j + 3], components[j + 4], components[j + 5]).applyMatrix4(matrix)\r\n          vc.set(components[j + 6], components[j + 7], components[j + 8]).applyMatrix4(matrix)\r\n          bta.setValue(va.x, va.y, va.z)\r\n          btb.setValue(vb.x, vb.y, vb.z)\r\n          btc.setValue(vc.x, vc.y, vc.z)\r\n          triMesh.addTriangle(bta, btb, btc, false)\r\n        }\r\n      }\r\n    }\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    triMesh.setScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    // MOD (yandeu): Use btConvexTriangleMeshShape for concave shapes\r\n    let collisionShape\r\n    if (options.concave) collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n    else collisionShape = new Ammo.btConvexTriangleMeshShape(triMesh, true)\r\n\r\n    // const collisionShape = new Ammo.btBvhTriangleMeshShape(triMesh, true, true)\r\n\r\n    collisionShape.resources = [triMesh]\r\n\r\n    Ammo.destroy(bta)\r\n    Ammo.destroy(btb)\r\n    Ammo.destroy(btc)\r\n\r\n    _finishCollisionShape(collisionShape, options)\r\n    return collisionShape\r\n  }\r\n})()\r\n\r\nexport const createHeightfieldTerrainShape = function (options = {}) {\r\n  _setOptions(options)\r\n\r\n  if (options.fit === FIT.ALL) {\r\n    console.warn('cannot use fit: all with type: heightfield')\r\n    return null\r\n  }\r\n  const heightfieldDistance = options.heightfieldDistance || 1\r\n  const heightfieldData = options.heightfieldData || []\r\n  const heightScale = options.heightScale || 0\r\n  const upAxis = options.hasOwnProperty('upAxis') ? options.upAxis : 1 // x = 0; y = 1; z = 2\r\n  const hdt = (() => {\r\n    switch (options.heightDataType) {\r\n      case 'short':\r\n        return Ammo.PHY_SHORT\r\n      case 'float':\r\n        return Ammo.PHY_FLOAT\r\n      default:\r\n        return Ammo.PHY_FLOAT\r\n    }\r\n  })()\r\n  const flipQuadEdges = options.hasOwnProperty('flipQuadEdges') ? options.flipQuadEdges : true\r\n\r\n  const heightStickLength = heightfieldData.length\r\n  const heightStickWidth = heightStickLength > 0 ? heightfieldData[0].length : 0\r\n\r\n  const data = Ammo._malloc(heightStickLength * heightStickWidth * 4)\r\n  const ptr = data / 4\r\n\r\n  let minHeight = Number.POSITIVE_INFINITY\r\n  let maxHeight = Number.NEGATIVE_INFINITY\r\n  let index = 0\r\n  for (let l = 0; l < heightStickLength; l++) {\r\n    for (let w = 0; w < heightStickWidth; w++) {\r\n      const height = heightfieldData[l][w]\r\n      Ammo.HEAPF32[ptr + index] = height\r\n      index++\r\n      minHeight = Math.min(minHeight, height)\r\n      maxHeight = Math.max(maxHeight, height)\r\n    }\r\n  }\r\n\r\n  const collisionShape = new Ammo.btHeightfieldTerrainShape(\r\n    heightStickWidth,\r\n    heightStickLength,\r\n    data,\r\n    heightScale,\r\n    minHeight,\r\n    maxHeight,\r\n    upAxis,\r\n    hdt,\r\n    flipQuadEdges\r\n  )\r\n\r\n  const scale = new Ammo.btVector3(heightfieldDistance, 1, heightfieldDistance)\r\n  collisionShape.setLocalScaling(scale)\r\n  Ammo.destroy(scale)\r\n\r\n  collisionShape.heightfieldData = data\r\n\r\n  _finishCollisionShape(collisionShape, options)\r\n  return collisionShape\r\n}\r\n\r\nfunction _setOptions(options) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  // we only keep type and margin\r\n  options.type = options.type || TYPE.HULL\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  return\r\n\r\n  options.fit = options.hasOwnProperty('fit') ? options.fit : FIT.ALL\r\n  options.type = options.type || TYPE.HULL\r\n  options.minHalfExtent = options.hasOwnProperty('minHalfExtent') ? options.minHalfExtent : 0\r\n  options.maxHalfExtent = options.hasOwnProperty('maxHalfExtent') ? options.maxHalfExtent : Number.POSITIVE_INFINITY\r\n  options.cylinderAxis = options.cylinderAxis || 'y'\r\n  options.margin = options.hasOwnProperty('margin') ? options.margin : 0.01\r\n  options.includeInvisible = options.hasOwnProperty('includeInvisible') ? options.includeInvisible : false\r\n\r\n  if (!options.offset) {\r\n    options.offset = new Vector3()\r\n  }\r\n\r\n  if (!options.orientation) {\r\n    options.orientation = new Quaternion()\r\n  }\r\n}\r\n\r\nconst _finishCollisionShape = function (collisionShape, options, scale) {\r\n  // MOD (yandeu): All of this will be done in physics.ts\r\n  return\r\n\r\n  collisionShape.type = options.type\r\n  collisionShape.setMargin(options.margin)\r\n  collisionShape.destroy = () => {\r\n    for (let res of collisionShape.resources || []) {\r\n      Ammo.destroy(res)\r\n    }\r\n    if (collisionShape.heightfieldData) {\r\n      Ammo._free(collisionShape.heightfieldData)\r\n    }\r\n    Ammo.destroy(collisionShape)\r\n  }\r\n\r\n  const localTransform = new Ammo.btTransform()\r\n  const rotation = new Ammo.btQuaternion()\r\n  localTransform.setIdentity()\r\n\r\n  localTransform.getOrigin().setValue(options.offset.x, options.offset.y, options.offset.z)\r\n  rotation.setValue(options.orientation.x, options.orientation.y, options.orientation.z, options.orientation.w)\r\n\r\n  localTransform.setRotation(rotation)\r\n  Ammo.destroy(rotation)\r\n\r\n  if (scale) {\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n  }\r\n\r\n  collisionShape.localTransform = localTransform\r\n}\r\n\r\nexport const iterateGeometries = (function () {\r\n  const inverse = new Matrix4()\r\n  return function (root, options, cb) {\r\n    // MOD (yandeu): Update to three.js r123\r\n    // compatibility fix for three.js >= r123 (Dezember 2020)\r\n    if (parseInt(REVISION) >= 123) inverse.copy(root.matrixWorld).invert()\r\n    else inverse.getInverse(root.matrixWorld)\r\n\r\n    const scale = new Vector3()\r\n    scale.setFromMatrixScale(root.matrixWorld)\r\n    root.traverse(mesh => {\r\n      const transform = new Matrix4()\r\n      if (\r\n        mesh.isMesh &&\r\n        // MOD (yandeu): No need to check if name is 'Sky'\r\n        // mesh.name !== 'Sky' &&\r\n        (options.includeInvisible || (mesh.el && mesh.el.object3D.visible) || mesh.visible)\r\n      ) {\r\n        if (mesh === root) {\r\n          transform.identity()\r\n        } else {\r\n          mesh.updateWorldMatrix(true)\r\n          transform.multiplyMatrices(inverse, mesh.matrixWorld)\r\n        }\r\n        // todo: might want to return null xform if this is the root so that callers can avoid multiplying\r\n        // things by the identity matrix\r\n        cb(\r\n          mesh.geometry.isBufferGeometry ? mesh.geometry.attributes.position.array : mesh.geometry.vertices,\r\n          transform.elements,\r\n          mesh.geometry.index ? mesh.geometry.index.array : null\r\n        )\r\n      }\r\n    })\r\n  }\r\n})()\r\n\r\nconst _computeScale = (function () {\r\n  const matrix = new Matrix4()\r\n  return function (matrixWorld, options = {}) {\r\n    const scale = new Vector3(1, 1, 1)\r\n    if (options.fit === FIT.ALL) {\r\n      matrix.fromArray(matrixWorld)\r\n      scale.setFromMatrixScale(matrix)\r\n    }\r\n    return scale\r\n  }\r\n})()\r\n\r\nconst _computeRadius = (function () {\r\n  const center = new Vector3()\r\n  return function (vertices, matrices, bounds) {\r\n    let maxRadiusSq = 0\r\n    let { x: cx, y: cy, z: cz } = bounds.getCenter(center)\r\n\r\n    _iterateVertices(vertices, matrices, v => {\r\n      const dx = cx - v.x\r\n      const dy = cy - v.y\r\n      const dz = cz - v.z\r\n      maxRadiusSq = Math.max(maxRadiusSq, dx * dx + dy * dy + dz * dz)\r\n    })\r\n    return Math.sqrt(maxRadiusSq)\r\n  }\r\n})()\r\n\r\nconst _computeHalfExtents = function (bounds, minHalfExtent, maxHalfExtent) {\r\n  const halfExtents = new Vector3()\r\n  return halfExtents.subVectors(bounds.max, bounds.min).multiplyScalar(0.5).clampScalar(minHalfExtent, maxHalfExtent)\r\n}\r\n\r\nconst _computeLocalOffset = function (matrix, bounds, target) {\r\n  target.addVectors(bounds.max, bounds.min).multiplyScalar(0.5).applyMatrix4(matrix)\r\n  return target\r\n}\r\n\r\n// returns the bounding box for the geometries underneath `root`.\r\nconst _computeBounds = function (vertices, matrices) {\r\n  const bounds = new Box3()\r\n  let minX = +Infinity\r\n  let minY = +Infinity\r\n  let minZ = +Infinity\r\n  let maxX = -Infinity\r\n  let maxY = -Infinity\r\n  let maxZ = -Infinity\r\n  bounds.min.set(0, 0, 0)\r\n  bounds.max.set(0, 0, 0)\r\n\r\n  _iterateVertices(vertices, matrices, v => {\r\n    if (v.x < minX) minX = v.x\r\n    if (v.y < minY) minY = v.y\r\n    if (v.z < minZ) minZ = v.z\r\n    if (v.x > maxX) maxX = v.x\r\n    if (v.y > maxY) maxY = v.y\r\n    if (v.z > maxZ) maxZ = v.z\r\n  })\r\n\r\n  bounds.min.set(minX, minY, minZ)\r\n  bounds.max.set(maxX, maxY, maxZ)\r\n  return bounds\r\n}\r\n\r\nconst _iterateVertices = (function () {\r\n  const vertex = new Vector3()\r\n  const matrix = new Matrix4()\r\n  return function (vertices, matrices, cb) {\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      matrix.fromArray(matrices[i])\r\n      for (let j = 0; j < vertices[i].length; j += 3) {\r\n        vertex.set(vertices[i][j], vertices[i][j + 1], vertices[i][j + 2]).applyMatrix4(matrix)\r\n        cb(vertex)\r\n      }\r\n    }\r\n  }\r\n})()\r\n","import { MeshLambertMaterial } from 'three';\r\nclass DefaultMaterial {\r\n    constructor() {\r\n        this._defaultMaterial = new MeshLambertMaterial({ color: 0xcccccc });\r\n    }\r\n    get() {\r\n        return this._defaultMaterial;\r\n    }\r\n}\r\nexport default DefaultMaterial;\r\n//# sourceMappingURL=defaultMaterial.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nvar __rest = (this && this.__rest) || function (s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n};\r\nimport { MathUtils as THREE_Math, Line, Points, MeshStandardMaterial, MeshNormalMaterial, MeshPhongMaterial, LineBasicMaterial, PointsMaterial, MeshBasicMaterial, MeshLambertMaterial, BoxBufferGeometry, SphereBufferGeometry, ExtrudeBufferGeometry, CylinderBufferGeometry, MeshPhysicalMaterial, MeshToonMaterial, TorusBufferGeometry, PlaneBufferGeometry, DoubleSide, ConeBufferGeometry } from 'three';\r\nimport { ExtendedMesh } from './extendedMesh';\r\nimport logger from './logger';\r\nimport DefaultMaterial from './defaultMaterial';\r\nexport default class Factories {\r\n    constructor(scene) {\r\n        this.scene = scene;\r\n        this.isHeadless = scene === 'headless' ? true : false;\r\n        this.defaultMaterial = new DefaultMaterial();\r\n    }\r\n    get make() {\r\n        return {\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.makePlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.makeBox(boxConfig, materialConfig),\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.makeSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.makeCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.makeCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.makeTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.makeExtrude(extrudeConfig, materialConfig)\r\n        };\r\n    }\r\n    get add() {\r\n        return {\r\n            // effectComposer: () => this.addEffectComposer(),\r\n            mesh: (mesh) => this.addMesh(mesh),\r\n            // group: (...children) => this.addGroup(children),\r\n            existing: (object) => this.addExisting(object),\r\n            //  Geometry\r\n            plane: (planeConfig = {}, materialConfig = {}) => this.addPlane(planeConfig, materialConfig),\r\n            box: (boxConfig = {}, materialConfig = {}) => this.addBox(boxConfig, materialConfig),\r\n            ground: (groundConfig, materialConfig = {}) => this.addGround(groundConfig, materialConfig),\r\n            //...\r\n            sphere: (sphereConfig = {}, materialConfig = {}) => this.addSphere(sphereConfig, materialConfig),\r\n            cylinder: (cylinderConfig = {}, materialConfig = {}) => this.addCylinder(cylinderConfig, materialConfig),\r\n            cone: (coneConfig = {}, materialConfig = {}) => this.addCone(coneConfig, materialConfig),\r\n            torus: (torusConfig = {}, materialConfig = {}) => this.addTorus(torusConfig, materialConfig),\r\n            extrude: (extrudeConfig, materialConfig = {}) => this.addExtrude(extrudeConfig, materialConfig),\r\n            //...\r\n            material: (materialConfig = {}) => this.addMaterial(materialConfig)\r\n        };\r\n    }\r\n    addExisting(...object) {\r\n        if (this.scene === 'headless')\r\n            return;\r\n        this.scene.add(...object);\r\n    }\r\n    addMesh(mesh) {\r\n        if (Array.isArray(mesh)) {\r\n            for (let i = 0; i < mesh.length; i++) {\r\n                this.addExisting(mesh[i]);\r\n            }\r\n        }\r\n        else {\r\n            this.addExisting(mesh);\r\n        }\r\n        return this;\r\n    }\r\n    createMesh(geometry, material, position) {\r\n        const { x = 0, y = 0, z = 0 } = position;\r\n        let obj;\r\n        switch (!Array.isArray(material) && material.type) {\r\n            case 'LineBasicMaterial':\r\n                obj = new Line(geometry, material);\r\n                break;\r\n            case 'PointsMaterial':\r\n                obj = new Points(geometry, material);\r\n                break;\r\n            default:\r\n                obj = new ExtendedMesh(geometry, material);\r\n                break;\r\n        }\r\n        obj.position.set(x, y, z);\r\n        obj.castShadow = obj.receiveShadow = true;\r\n        return obj;\r\n    }\r\n    makeExtrude(extrudeConfig, materialConfig) {\r\n        const { x, y, z, name, shape, autoCenter = true, breakable = false } = extrudeConfig, rest = __rest(extrudeConfig\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        , [\"x\", \"y\", \"z\", \"name\", \"shape\", \"autoCenter\", \"breakable\"]);\r\n        // @ts-ignore // ExtrudeGeometryOptions interface missing since three.js r121\r\n        const { depth = 1, bevelEnabled = false } = rest;\r\n        const geometry = new ExtrudeBufferGeometry(shape, Object.assign({ depth, bevelEnabled }, rest));\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        // auto adjust the center for custom shapes\r\n        if (autoCenter)\r\n            mesh.geometry.center();\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'extrude';\r\n        return mesh;\r\n    }\r\n    addExtrude(extrudeConfig, materialConfig = {}) {\r\n        const obj = this.makeExtrude(extrudeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makePlane(planeConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = planeConfig, rest = __rest(planeConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new PlaneBufferGeometry(rest.width || 1, rest.height || 1, rest.widthSegments || 1, rest.heightSegments || 1);\r\n        const material = this.addMaterial(materialConfig);\r\n        material.side = DoubleSide;\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'plane';\r\n        return mesh;\r\n    }\r\n    addPlane(planeConfig, materialConfig) {\r\n        const obj = this.makePlane(planeConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeSphere(sphereConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = sphereConfig, rest = __rest(sphereConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new SphereBufferGeometry(rest.radius || 1, rest.widthSegments || 16, rest.heightSegments || 12, rest.phiStart || undefined, rest.phiLength || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'sphere';\r\n        return mesh;\r\n    }\r\n    addSphere(sphereConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeSphere(sphereConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeBox(boxConfig, materialConfig) {\r\n        const { x, y, z, name, breakable = false } = boxConfig, rest = __rest(boxConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new BoxBufferGeometry(rest.width || 1, rest.height || 1, rest.depth || 1, rest.widthSegments || undefined, rest.heightSegments || undefined, rest.depthSegments || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'box';\r\n        return mesh;\r\n    }\r\n    addBox(boxConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeBox(boxConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addGround(groundConfig, materialConfig = {}) {\r\n        const obj = this.makeBox(groundConfig, materialConfig);\r\n        obj.rotateX(THREE_Math.degToRad(90));\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = cylinderConfig, rest = __rest(cylinderConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new CylinderBufferGeometry(rest.radiusTop || 1, rest.radiusBottom || 1, rest.height || 1, rest.radiusSegments || undefined, rest.heightSegments || undefined, rest.openEnded || undefined, rest.thetaStart || undefined, rest.thetaLength || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cylinder';\r\n        return mesh;\r\n    }\r\n    addCylinder(cylinderConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCylinder(cylinderConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    makeCone(coneConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = coneConfig, rest = __rest(coneConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new ConeBufferGeometry(rest.radius || 1, rest.height || 1, rest.radiusSegments || 8, rest.heightSegments || 1, rest.openEnded || false, rest.thetaStart || 0, rest.thetaLength || 2 * Math.PI);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'cone';\r\n        return mesh;\r\n    }\r\n    addCone(coneConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeCone(coneConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    // https://threejs.org/docs/index.html#api/en/geometries/TorusBufferGeometry\r\n    makeTorus(torusConfig = {}, materialConfig = {}) {\r\n        const { x, y, z, name, breakable = false } = torusConfig, rest = __rest(torusConfig, [\"x\", \"y\", \"z\", \"name\", \"breakable\"]);\r\n        const geometry = new TorusBufferGeometry(rest.radius || undefined, rest.tube || undefined, rest.radialSegments || undefined, rest.tubularSegments || undefined, rest.arc || undefined);\r\n        const material = this.addMaterial(materialConfig);\r\n        const mesh = this.createMesh(geometry, material, { x, y, z });\r\n        mesh.name = name || `body_id_${mesh.id}`;\r\n        mesh.shape = 'torus';\r\n        return mesh;\r\n    }\r\n    addTorus(torusConfig = {}, materialConfig = {}) {\r\n        const obj = this.makeTorus(torusConfig, materialConfig);\r\n        this.addExisting(obj);\r\n        return obj;\r\n    }\r\n    addMaterial(materialConfig = {}) {\r\n        const type = Object.keys(materialConfig)[0];\r\n        let material;\r\n        // if (type) {\r\n        //   const { map } = materialConfig[type]\r\n        //   if (typeof map === 'string') materialConfig[type].map = this.loadTexture(map)\r\n        // }\r\n        // always share the same material in headless mode to save memory\r\n        if (this.scene === 'headless')\r\n            return this.defaultMaterial.get();\r\n        switch (type) {\r\n            case 'basic':\r\n                material = new MeshBasicMaterial(materialConfig.basic);\r\n                break;\r\n            case 'normal':\r\n                material = new MeshNormalMaterial(materialConfig.normal);\r\n                break;\r\n            case 'standard':\r\n                material = new MeshStandardMaterial(materialConfig.standard);\r\n                break;\r\n            case 'lambert':\r\n                material = new MeshLambertMaterial(materialConfig.lambert);\r\n                break;\r\n            case 'phong':\r\n                material = new MeshPhongMaterial(materialConfig.phong);\r\n                break;\r\n            case 'physical':\r\n                if (typeof materialConfig.physical !== 'undefined') {\r\n                    material = new MeshPhysicalMaterial(materialConfig.physical);\r\n                }\r\n                else {\r\n                    logger('You need to pass parameters to the physical material. (Fallback to default material)');\r\n                    material = this.defaultMaterial.get();\r\n                }\r\n                break;\r\n            case 'toon':\r\n                material = new MeshToonMaterial(materialConfig.toon);\r\n                break;\r\n            case 'line':\r\n                material = new LineBasicMaterial(materialConfig.line);\r\n                break;\r\n            case 'points':\r\n                material = new PointsMaterial(materialConfig.points);\r\n                break;\r\n            case 'custom':\r\n                material = materialConfig.custom || this.defaultMaterial.get();\r\n                break;\r\n            default:\r\n                material = this.defaultMaterial.get();\r\n                break;\r\n        }\r\n        return material;\r\n    }\r\n}\r\n//# sourceMappingURL=factories.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { EventEmitter } from 'eventemitter3'\r\nimport { ExtendedObject3D, CollisionEvent } from '@enable3d/common/dist/types'\r\nimport { Types } from './physics'\r\n\r\nexport class CollisionEvents extends EventEmitter {\r\n  public worldTransform: Ammo.btTransform\r\n  public physicsWorld: Ammo.btDiscreteDynamicsWorld\r\n\r\n  public addCollider(\r\n    object1: ExtendedObject3D,\r\n    object2: ExtendedObject3D,\r\n    eventCallback: (event: CollisionEvent) => void\r\n  ) {\r\n    if (!object1.body || !object2.body) return\r\n\r\n    object1.body.checkCollisions = true\r\n    object2.body.checkCollisions = true\r\n\r\n    this.on('collision', (data: { bodies: ExtendedObject3D[]; event: CollisionEvent }) => {\r\n      const { bodies, event } = data\r\n      if (bodies[0]?.name && bodies[1]?.name && object1?.name && object2?.name) {\r\n        if (bodies[0].name === object1.name && bodies[1].name === object2.name) eventCallback(event)\r\n        else if (bodies[1].name === object1.name && bodies[0].name === object2.name) eventCallback(event)\r\n      }\r\n    })\r\n  }\r\n}\r\n","/**\r\n * Copied from three.js examples and added a fix\r\n */\r\n\r\n/**\r\n * @author yomboprime https://github.com/yomboprime\r\n *\r\n * @fileoverview This class can be used to subdivide a convex Geometry object into pieces.\r\n *\r\n * Usage:\r\n *\r\n * Use the function prepareBreakableObject to prepare a Mesh object to be broken.\r\n *\r\n * Then, call the various functions to subdivide the object (subdivideByImpact, cutByPlane)\r\n *\r\n * Sub-objects that are product of subdivision don't need prepareBreakableObject to be called on them.\r\n *\r\n * Requisites for the object:\r\n *\r\n *  - Mesh object must have a BufferGeometry (not Geometry) and a Material\r\n *\r\n *  - Vertex normals must be planar (not smoothed)\r\n *\r\n *  - The geometry must be convex (this is not checked in the library). You can create convex\r\n *  geometries with ConvexBufferGeometry. The BoxBufferGeometry, SphereBufferGeometry and other convex primitives\r\n *  can also be used.\r\n *\r\n * Note: This lib adds member variables to object's userData member (see prepareBreakableObject function)\r\n * Use with caution and read the code when using with other libs.\r\n *\r\n * @param {double} minSizeForBreak Min size a debris can have to break.\r\n * @param {double} smallDelta Max distance to consider that a point belongs to a plane.\r\n *\r\n */\r\n\r\nimport { Line3, Mesh, Plane, Vector3 } from 'three'\r\nimport { ConvexGeometry } from './externals'\r\nimport logger from '@enable3d/common/dist/logger'\r\n\r\nconst newConvexGeometry = (points: Vector3[]) => {\r\n  // @ts-ignore\r\n  let _newConvexGeometry = window.THREE && window.THREE.ConvexGeometry ? window.THREE.ConvexGeometry : ConvexGeometry\r\n  return new _newConvexGeometry(points)\r\n}\r\n\r\nconst ConvexObjectBreaker = function (minSizeForBreak?: number, smallDelta?: number) {\r\n  // @ts-ignore\r\n  this.minSizeForBreak = minSizeForBreak || 1.4\r\n  // @ts-ignore\r\n  this.smallDelta = smallDelta || 0.0001\r\n\r\n  // @ts-ignore\r\n  this.tempLine1 = new Line3()\r\n  // @ts-ignore\r\n  this.tempPlane1 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane2 = new Plane()\r\n  // @ts-ignore\r\n  this.tempPlane_Cut = new Plane()\r\n  // @ts-ignore\r\n  this.tempCM1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempCM2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_3 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_P2 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N0 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_N1 = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_AB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempVector3_CB = new Vector3()\r\n  // @ts-ignore\r\n  this.tempResultObjects = { object1: null, object2: null }\r\n\r\n  // @ts-ignore\r\n  this.segments = []\r\n  var n = 30 * 30\r\n  // @ts-ignore\r\n  for (var i = 0; i < n; i++) this.segments[i] = false\r\n}\r\n\r\nConvexObjectBreaker.prototype = {\r\n  constructor: ConvexObjectBreaker,\r\n\r\n  prepareBreakableObject: function (object: any, mass: any, velocity: any, angularVelocity: any, breakable: any) {\r\n    // object is a Object3d (normally a Mesh), must have a BufferGeometry, and it must be convex.\r\n    // Its material property is propagated to its children (sub-pieces)\r\n    // mass must be > 0\r\n\r\n    if (!object.geometry.isBufferGeometry) {\r\n      console.error('THREE.ConvexObjectBreaker.prepareBreakableObject(): Parameter object must have a BufferGeometry.')\r\n    }\r\n\r\n    object.userData.ammoPhysicsData = {} // initialise our new data container - would be best to move this to ExtendedObject and not rely on userData at all for best compatibility\r\n    var ammoPhysicsData = object.userData.ammoPhysicsData // get reference to it\r\n    ammoPhysicsData.mass = mass\r\n    ammoPhysicsData.velocity = velocity.clone()\r\n    ammoPhysicsData.angularVelocity = angularVelocity.clone()\r\n    ammoPhysicsData.breakable = breakable\r\n  },\r\n\r\n  /*\r\n   * @param {int} maxRadialIterations Iterations for radial cuts.\r\n   * @param {int} maxRandomIterations Max random iterations for not-radial cuts\r\n   *\r\n   * Returns the array of pieces\r\n   */\r\n  subdivideByImpact: function (\r\n    object: any,\r\n    pointOfImpact: any,\r\n    normal: any,\r\n    maxRadialIterations: any,\r\n    maxRandomIterations: any\r\n  ) {\r\n    var debris: any = []\r\n\r\n    var tempPlane1 = this.tempPlane1\r\n    var tempPlane2 = this.tempPlane2\r\n\r\n    this.tempVector3.addVectors(pointOfImpact, normal)\r\n    tempPlane1.setFromCoplanarPoints(pointOfImpact, object.position, this.tempVector3)\r\n\r\n    var maxTotalIterations = maxRandomIterations + maxRadialIterations\r\n\r\n    var scope = this\r\n\r\n    function subdivideRadial(subObject: any, startAngle: any, endAngle: any, numIterations: any) {\r\n      if (Math.random() < numIterations * 0.05 || numIterations > maxTotalIterations) {\r\n        debris.push(subObject)\r\n\r\n        return\r\n      }\r\n\r\n      var angle = Math.PI\r\n\r\n      if (numIterations === 0) {\r\n        tempPlane2.normal.copy(tempPlane1.normal)\r\n        tempPlane2.constant = tempPlane1.constant\r\n      } else {\r\n        if (numIterations <= maxRadialIterations) {\r\n          angle = (endAngle - startAngle) * (0.2 + 0.6 * Math.random()) + startAngle\r\n\r\n          // Rotate tempPlane2 at impact point around normal axis and the angle\r\n          scope.tempVector3_2.copy(object.position).sub(pointOfImpact).applyAxisAngle(normal, angle).add(pointOfImpact)\r\n          tempPlane2.setFromCoplanarPoints(pointOfImpact, scope.tempVector3, scope.tempVector3_2)\r\n        } else {\r\n          angle = (0.5 * (numIterations & 1) + 0.2 * (2 - Math.random())) * Math.PI\r\n\r\n          // Rotate tempPlane2 at object position around normal axis and the angle\r\n          scope.tempVector3_2\r\n            .copy(pointOfImpact)\r\n            .sub(subObject.position)\r\n            .applyAxisAngle(normal, angle)\r\n            .add(subObject.position)\r\n          scope.tempVector3_3.copy(normal).add(subObject.position)\r\n          tempPlane2.setFromCoplanarPoints(subObject.position, scope.tempVector3_3, scope.tempVector3_2)\r\n        }\r\n      }\r\n\r\n      // Perform the cut\r\n      scope.cutByPlane(subObject, tempPlane2, scope.tempResultObjects)\r\n\r\n      var obj1 = scope.tempResultObjects.object1\r\n      var obj2 = scope.tempResultObjects.object2\r\n\r\n      if (obj1) {\r\n        subdivideRadial(obj1, startAngle, angle, numIterations + 1)\r\n      }\r\n\r\n      if (obj2) {\r\n        subdivideRadial(obj2, angle, endAngle, numIterations + 1)\r\n      }\r\n    }\r\n\r\n    subdivideRadial(object, 0, 2 * Math.PI, 0)\r\n\r\n    return debris\r\n  },\r\n\r\n  cutByPlane: function (object: any, plane: any, output: any) {\r\n    // Returns breakable objects in output.object1 and output.object2 members, the resulting 2 pieces of the cut.\r\n    // object2 can be null if the plane doesn't cut the object.\r\n    // object1 can be null only in case of internal error\r\n    // Returned value is number of pieces, 0 for error.\r\n\r\n    var geometry = object.geometry\r\n    var coords = geometry.attributes.position.array\r\n    var normals = geometry.attributes.normal.array\r\n\r\n    var numPoints = coords.length / 3\r\n    var numFaces = numPoints / 3\r\n\r\n    var indices = geometry.getIndex()\r\n\r\n    if (indices) {\r\n      indices = indices.array\r\n      numFaces = indices.length / 3\r\n    }\r\n\r\n    function getVertexIndex(faceIdx: any, vert: any) {\r\n      // vert = 0, 1 or 2.\r\n\r\n      var idx = faceIdx * 3 + vert\r\n\r\n      return indices ? indices[idx] : idx\r\n    }\r\n\r\n    var points1 = []\r\n    var points2 = []\r\n\r\n    var delta = this.smallDelta\r\n\r\n    // Reset segments mark\r\n    var numPointPairs = numPoints * numPoints\r\n    for (var i = 0; i < numPointPairs; i++) this.segments[i] = false\r\n\r\n    var p0 = this.tempVector3_P0\r\n    var p1 = this.tempVector3_P1\r\n    var n0 = this.tempVector3_N0\r\n    var n1 = this.tempVector3_N1\r\n\r\n    // Iterate through the faces to mark edges shared by coplanar faces\r\n    for (var i = 0; i < numFaces - 1; i++) {\r\n      var a1 = getVertexIndex(i, 0)\r\n      var b1 = getVertexIndex(i, 1)\r\n      var c1 = getVertexIndex(i, 2)\r\n\r\n      // Assuming all 3 vertices have the same normal\r\n      n0.set(normals[a1], normals[a1] + 1, normals[a1] + 2)\r\n\r\n      for (var j = i + 1; j < numFaces; j++) {\r\n        var a2 = getVertexIndex(j, 0)\r\n        var b2 = getVertexIndex(j, 1)\r\n        var c2 = getVertexIndex(j, 2)\r\n\r\n        // Assuming all 3 vertices have the same normal\r\n        n1.set(normals[a2], normals[a2] + 1, normals[a2] + 2)\r\n\r\n        var coplanar = 1 - n0.dot(n1) < delta\r\n\r\n        if (coplanar) {\r\n          if (a1 === a2 || a1 === b2 || a1 === c2) {\r\n            if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n              this.segments[a1 * numPoints + b1] = true\r\n              this.segments[b1 * numPoints + a1] = true\r\n            } else {\r\n              this.segments[c1 * numPoints + a1] = true\r\n              this.segments[a1 * numPoints + c1] = true\r\n            }\r\n          } else if (b1 === a2 || b1 === b2 || b1 === c2) {\r\n            this.segments[c1 * numPoints + b1] = true\r\n            this.segments[b1 * numPoints + c1] = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Transform the plane to object local space\r\n    var localPlane = this.tempPlane_Cut\r\n    object.updateMatrix()\r\n    ConvexObjectBreaker.transformPlaneToLocalSpace(plane, object.matrix, localPlane)\r\n\r\n    // Iterate through the faces adding points to both pieces\r\n    for (var i = 0; i < numFaces; i++) {\r\n      var va = getVertexIndex(i, 0)\r\n      var vb = getVertexIndex(i, 1)\r\n      var vc = getVertexIndex(i, 2)\r\n\r\n      for (var segment = 0; segment < 3; segment++) {\r\n        var i0 = segment === 0 ? va : segment === 1 ? vb : vc\r\n        var i1 = segment === 0 ? vb : segment === 1 ? vc : va\r\n\r\n        var segmentState = this.segments[i0 * numPoints + i1]\r\n\r\n        if (segmentState) continue // The segment already has been processed in another face\r\n\r\n        // Mark segment as processed (also inverted segment)\r\n        this.segments[i0 * numPoints + i1] = true\r\n        this.segments[i1 * numPoints + i0] = true\r\n\r\n        p0.set(coords[3 * i0], coords[3 * i0 + 1], coords[3 * i0 + 2])\r\n        p1.set(coords[3 * i1], coords[3 * i1 + 1], coords[3 * i1 + 2])\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark0 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p0)\r\n\r\n        if (d > delta) {\r\n          mark0 = 2\r\n          points2.push(p0.clone())\r\n        } else if (d < -delta) {\r\n          mark0 = 1\r\n          points1.push(p0.clone())\r\n        } else {\r\n          mark0 = 3\r\n          points1.push(p0.clone())\r\n          points2.push(p0.clone())\r\n        }\r\n\r\n        // mark: 1 for negative side, 2 for positive side, 3 for coplanar point\r\n        var mark1 = 0\r\n\r\n        var d = localPlane.distanceToPoint(p1)\r\n\r\n        if (d > delta) {\r\n          mark1 = 2\r\n          points2.push(p1.clone())\r\n        } else if (d < -delta) {\r\n          mark1 = 1\r\n          points1.push(p1.clone())\r\n        } else {\r\n          mark1 = 3\r\n          points1.push(p1.clone())\r\n          points2.push(p1.clone())\r\n        }\r\n\r\n        if ((mark0 === 1 && mark1 === 2) || (mark0 === 2 && mark1 === 1)) {\r\n          // Intersection of segment with the plane\r\n\r\n          this.tempLine1.start.copy(p0)\r\n          this.tempLine1.end.copy(p1)\r\n\r\n          var intersection = new Vector3()\r\n          intersection = localPlane.intersectLine(this.tempLine1, intersection)\r\n\r\n          if (intersection === undefined) {\r\n            // Shouldn't happen\r\n            console.error('Internal error: segment does not intersect plane.')\r\n            output.segmentedObject1 = null\r\n            output.segmentedObject2 = null\r\n            return 0\r\n          }\r\n\r\n          points1.push(intersection)\r\n          points2.push(intersection.clone())\r\n        }\r\n      }\r\n    }\r\n\r\n    // Calculate debris mass (very fast and imprecise):\r\n    var newMass = object.userData.ammoPhysicsData.mass * 0.5\r\n\r\n    // Calculate debris Center of Mass (again fast and imprecise)\r\n    this.tempCM1.set(0, 0, 0)\r\n    var radius1 = 0\r\n    var numPoints1 = points1.length\r\n\r\n    if (numPoints1 > 0) {\r\n      for (var i = 0; i < numPoints1; i++) this.tempCM1.add(points1[i])\r\n\r\n      this.tempCM1.divideScalar(numPoints1)\r\n      for (var i = 0; i < numPoints1; i++) {\r\n        var p = points1[i]\r\n        p.sub(this.tempCM1)\r\n        radius1 = Math.max(radius1, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM1.add(object.position)\r\n    }\r\n\r\n    this.tempCM2.set(0, 0, 0)\r\n    var radius2 = 0\r\n    var numPoints2 = points2.length\r\n    if (numPoints2 > 0) {\r\n      for (var i = 0; i < numPoints2; i++) this.tempCM2.add(points2[i])\r\n\r\n      this.tempCM2.divideScalar(numPoints2)\r\n      for (var i = 0; i < numPoints2; i++) {\r\n        var p = points2[i]\r\n        p.sub(this.tempCM2)\r\n        radius2 = Math.max(radius2, p.x, p.y, p.z)\r\n      }\r\n      this.tempCM2.add(object.position)\r\n    }\r\n\r\n    var object1 = null\r\n    var object2 = null\r\n\r\n    var numObjects = 0\r\n\r\n    /**\r\n     * MOD: Wrapped in try catch block to avoid errors\r\n     */\r\n    if (numPoints1 > 4) {\r\n      try {\r\n        object1 = new Mesh(newConvexGeometry(points1), object.material)\r\n        object1.position.copy(this.tempCM1)\r\n        object1.quaternion.copy(object.quaternion)\r\n        object1.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object1,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius1 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts')\r\n        logger(error)\r\n      }\r\n    }\r\n\r\n    if (numPoints2 > 4) {\r\n      try {\r\n        object2 = new Mesh(newConvexGeometry(points2), object.material)\r\n        object2.position.copy(this.tempCM2)\r\n        object2.quaternion.copy(object.quaternion)\r\n        object2.userData = object.userData\r\n\r\n        this.prepareBreakableObject(\r\n          object2,\r\n          newMass,\r\n          object.userData.ammoPhysicsData.velocity,\r\n          object.userData.ammoPhysicsData.angularVelocity,\r\n          2 * radius2 > this.minSizeForBreak\r\n        )\r\n\r\n        numObjects++\r\n      } catch (error) {\r\n        logger('Error in ConvexObjectBreaker.ts')\r\n        logger(error)\r\n      }\r\n    }\r\n\r\n    output.object1 = object1\r\n    output.object2 = object2\r\n\r\n    return numObjects\r\n  }\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVector = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[4] * y + e[8] * z\r\n  v.y = e[1] * x + e[5] * y + e[9] * z\r\n  v.z = e[2] * x + e[6] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformFreeVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a free vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z\r\n  v.y = e[4] * x + e[5] * y + e[6] * z\r\n  v.z = e[8] * x + e[9] * y + e[10] * z\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformTiedVectorInverse = function (v: any, m: any) {\r\n  // input:\r\n  // vector interpreted as a tied (ordinary) vector\r\n  // THREE.Matrix4 orthogonal matrix (matrix without scale)\r\n\r\n  var x = v.x,\r\n    y = v.y,\r\n    z = v.z\r\n  var e = m.elements\r\n\r\n  v.x = e[0] * x + e[1] * y + e[2] * z - e[12]\r\n  v.y = e[4] * x + e[5] * y + e[6] * z - e[13]\r\n  v.z = e[8] * x + e[9] * y + e[10] * z - e[14]\r\n\r\n  return v\r\n}\r\n\r\nConvexObjectBreaker.transformPlaneToLocalSpace = (function () {\r\n  var v1 = new Vector3()\r\n\r\n  return function transformPlaneToLocalSpace(plane: any, m: any, resultPlane: any) {\r\n    resultPlane.normal.copy(plane.normal)\r\n    resultPlane.constant = plane.constant\r\n\r\n    var referencePoint = ConvexObjectBreaker.transformTiedVectorInverse(plane.coplanarPoint(v1), m)\r\n\r\n    ConvexObjectBreaker.transformFreeVectorInverse(resultPlane.normal, m)\r\n\r\n    // recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n    resultPlane.constant = -referencePoint.dot(resultPlane.normal)\r\n  }\r\n})()\r\n\r\nexport { ConvexObjectBreaker }\r\n","// Inspired by https://github.com/playcanvas/engine/blob/master/examples/wasm-loader.js\r\nconst wasmSupported = (() => {\r\n    try {\r\n        if (typeof WebAssembly === 'object' && typeof WebAssembly.instantiate === 'function') {\r\n            const module = new WebAssembly.Module(Uint8Array.of(0x0, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00));\r\n            if (module instanceof WebAssembly.Module)\r\n                return new WebAssembly.Instance(module) instanceof WebAssembly.Instance;\r\n        }\r\n    }\r\n    catch (e) { }\r\n    return false;\r\n})();\r\nconst loadScriptAsync = (url, doneCallback) => {\r\n    var tag = document.createElement('script');\r\n    tag.onload = () => {\r\n        doneCallback();\r\n    };\r\n    tag.onerror = () => {\r\n        throw new Error('failed to load ' + url);\r\n    };\r\n    tag.async = true;\r\n    tag.src = url;\r\n    document.head.appendChild(tag);\r\n};\r\nconst loadAmmoModule = (path, doneCallback) => {\r\n    // console.log(wasmSupported ? 'WebAssembly is supported' : 'WebAssembly is not supported')\r\n    if (wasmSupported)\r\n        loadScriptAsync(`${path}/ammo.wasm.js`, () => doneCallback());\r\n    else\r\n        loadScriptAsync(`${path}/ammo.js`, () => doneCallback());\r\n};\r\nexport default loadAmmoModule;\r\n//# sourceMappingURL=wasmLoader.js.map","import loadAmmoModule from './wasmLoader';\r\nconst PhysicsLoader = (path, callback) => {\r\n    if (typeof window !== 'undefined')\r\n        window.__loadPhysics = true;\r\n    loadAmmoModule(path, () => {\r\n        Ammo().then(() => {\r\n            callback();\r\n        });\r\n    });\r\n};\r\nexport { PhysicsLoader };\r\n//# sourceMappingURL=physicsLoader.js.map","// https://www.typescriptlang.org/docs/handbook/mixins.html\r\nconst applyMixins = (derivedCtor, baseCtors) => {\r\n    baseCtors.forEach(baseCtor => {\r\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\r\n            // @ts-ignore\r\n            Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\r\n        });\r\n    });\r\n};\r\nexport default applyMixins;\r\n//# sourceMappingURL=applyMixins.js.map","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport applyMixins from '@enable3d/common/dist/applyMixins'\r\nimport ClosestRayResultCallback from './closestRayResultCallback'\r\nimport AllHitsRayResultCallback from './allHitsRayResultCallback'\r\nimport { AmmoPhysics } from '../physics'\r\n\r\nclass Raycaster {\r\n  public readonly type: string\r\n  protected _btRayFrom: Ammo.btVector3\r\n  protected _btRayTo: Ammo.btVector3\r\n  protected _btRayCallback: Ammo.RayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  setRayFromWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayFrom.setValue(x, y, z)\r\n  }\r\n\r\n  setRayToWorld(x = 0, y = 0, z = 0) {\r\n    this._btRayTo.setValue(x, y, z)\r\n  }\r\n\r\n  hasHit() {\r\n    return this._btRayCallback.hasHit()\r\n  }\r\n\r\n  rayTest() {\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n\r\n    this._btRayCallback =\r\n      this.type === 'closest'\r\n        ? new Ammo.ClosestRayResultCallback(this._btRayFrom, this._btRayTo)\r\n        : new Ammo.AllHitsRayResultCallback(this._btRayFrom, this._btRayTo)\r\n\r\n    this.physics.physicsWorld.rayTest(this._btRayFrom, this._btRayTo, this._btRayCallback)\r\n  }\r\n\r\n  destroy() {\r\n    if (typeof this._btRayFrom !== 'undefined') Ammo.destroy(this._btRayFrom)\r\n    if (typeof this._btRayTo !== 'undefined') Ammo.destroy(this._btRayTo)\r\n    if (typeof this._btRayCallback !== 'undefined') Ammo.destroy(this._btRayCallback)\r\n  }\r\n}\r\n\r\ninterface ClosestRaycaster extends Raycaster, ClosestRayResultCallback {}\r\ninterface AllHitsRaycaster extends Raycaster, AllHitsRayResultCallback {}\r\n\r\nclass ClosestRaycaster implements Raycaster, ClosestRayResultCallback {\r\n  public readonly type = 'closest'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\nclass AllHitsRaycaster implements Raycaster, AllHitsRayResultCallback {\r\n  public readonly type = 'allHits'\r\n  protected _btRayFrom = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayTo = new Ammo.btVector3(0, 0, 0)\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n}\r\n\r\napplyMixins(ClosestRaycaster, [Raycaster, ClosestRayResultCallback])\r\napplyMixins(AllHitsRaycaster, [Raycaster, AllHitsRayResultCallback])\r\n\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\n\r\nexport default class ClosestRayResultCallback {\r\n  protected _btRayCallback: Ammo.ClosestRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointWorld(): { x: number; y: number; z: number } {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3\r\n\r\n    const point = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return point\r\n  }\r\n\r\n  getHitNormalWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normal = { x: h.x(), y: h.y(), z: h.z() }\r\n\r\n    return normal\r\n  }\r\n\r\n  getCollisionObject(): ExtendedObject3D {\r\n    // @ts-ignore\r\n    const rb = Ammo.castObject(this._btRayCallback.get_m_collisionObject(), Ammo.btRigidBody)\r\n    // @ts-ignore\r\n    return rb.threeObject\r\n  }\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { AmmoPhysics } from '../physics'\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/types'\r\n\r\nexport default class AllHitsRayResultCallback {\r\n  protected _btRayCallback: Ammo.AllHitsRayResultCallback\r\n\r\n  constructor(protected physics: AmmoPhysics) {}\r\n\r\n  getHitPointsWorld() {\r\n    const h = this._btRayCallback.get_m_hitPointWorld() as Ammo.btVector3Array\r\n\r\n    const points = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      points.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return points\r\n  }\r\n\r\n  // TODO: Remove this in future versions!\r\n  getHitPointWorld() {\r\n    console.warn('[enable3d] Use getHitPointsWorld() instead of getHitPointWorld() for the AllHitsRayCaster!')\r\n    return this.getHitPointsWorld()\r\n  }\r\n\r\n  getHitNormalsWorld() {\r\n    const h = this._btRayCallback.get_m_hitNormalWorld()\r\n\r\n    const normals = []\r\n    for (let i = h.size() - 1; i >= 0; i--) {\r\n      const hh = h.at(i)\r\n      normals.push({ x: hh.x(), y: hh.y(), z: hh.z() })\r\n    }\r\n\r\n    return normals\r\n  }\r\n\r\n  getCollisionObjects() {\r\n    const threeObjects: ExtendedObject3D[] = []\r\n    const objects = this._btRayCallback.get_m_collisionObjects()\r\n\r\n    for (let i = objects.size() - 1; i >= 0; i--) {\r\n      // @ts-ignore\r\n      const rb = Ammo.castObject(objects.at(i), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      threeObjects.push(rb.threeObject)\r\n    }\r\n    return threeObjects\r\n  }\r\n}\r\n","/**\r\n * @author yandeu\r\n * @description Ported to TypeScript\r\n */\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\n/**\r\n * This is the Clock class THREE provides.\r\n */\r\nclass Clock {\r\n  autoStart: boolean\r\n  startTime: number\r\n  oldTime: number\r\n  elapsedTime: number\r\n  running: boolean\r\n\r\n  constructor(autoStart = true) {\r\n    this.autoStart = autoStart !== undefined ? autoStart : true\r\n    this.startTime = 0\r\n    this.oldTime = 0\r\n    this.elapsedTime = 0\r\n    this.running = false\r\n  }\r\n\r\n  start() {\r\n    this.startTime = (typeof performance === 'undefined' ? Date : performance).now() // see #10732\r\n\r\n    this.oldTime = this.startTime\r\n    this.elapsedTime = 0\r\n    this.running = true\r\n  }\r\n\r\n  stop() {\r\n    this.getElapsedTime()\r\n    this.running = false\r\n    this.autoStart = false\r\n  }\r\n\r\n  getElapsedTime() {\r\n    this.getDelta()\r\n    return this.elapsedTime\r\n  }\r\n\r\n  getDelta() {\r\n    let diff = 0\r\n\r\n    if (this.autoStart && !this.running) {\r\n      this.start()\r\n      return 0\r\n    }\r\n\r\n    if (this.running) {\r\n      let newTime = (typeof performance === 'undefined' ? Date : performance).now()\r\n\r\n      diff = (newTime - this.oldTime) / 1000\r\n      this.oldTime = newTime\r\n\r\n      this.elapsedTime += diff\r\n    }\r\n\r\n    return diff\r\n  }\r\n}\r\n\r\nexport { Clock }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport logger from '@enable3d/common/dist/logger'\r\nimport PhysicsBody from '@enable3d/common/dist/physicsBody'\r\n\r\nimport { ExtendedObject3D } from '@enable3d/common/dist/extendedObject3D'\r\nexport { ExtendedObject3D }\r\n\r\nimport { ExtendedMesh } from '@enable3d/common/dist/extendedMesh'\r\nexport { ExtendedMesh }\r\n\r\nimport { ExtendedGroup } from '@enable3d/common/dist/extendedGroup'\r\nexport { ExtendedGroup }\r\n\r\nimport Shapes from './shapes'\r\nimport Constraints from './constraints'\r\nimport { EventEmitter } from 'eventemitter3'\r\nimport { Geometry } from './externals'\r\nimport { Vector3, Quaternion, Scene, Euler, Matrix4, BufferGeometry, REVISION } from 'three'\r\nimport {\r\n  iterateGeometries,\r\n  createHullShape,\r\n  createHACDShapes,\r\n  createVHACDShapes,\r\n  createTriMeshShape\r\n} from './three-to-ammo'\r\nimport { createTorusShape } from './torusShape'\r\nimport Factories from '@enable3d/common/dist/factories'\r\nimport { CollisionEvents } from './collisionEvents'\r\n\r\nimport DebugDrawer from './debugDrawer'\r\nimport { ConvexObjectBreaker } from './convexObjectBreaker'\r\n\r\nimport { PhysicsLoader } from '@enable3d/common/dist/physicsLoader'\r\nimport DefaultMaterial from '@enable3d/common/dist/defaultMaterial'\r\nexport { PhysicsLoader }\r\n\r\nimport * as Types from '@enable3d/common/dist/types'\r\nimport { ClosestRaycaster, AllHitsRaycaster } from './raycaster/raycaster'\r\nexport { ClosestRaycaster, AllHitsRaycaster }\r\nexport { Types }\r\n\r\n// Export THREE.Clock\r\nexport { Clock } from './lib/Clock'\r\n\r\nclass AmmoPhysics extends EventEmitter {\r\n  public worldTransform: Ammo.btTransform\r\n  public factory: Factories\r\n  public isHeadless: boolean\r\n\r\n  public rigidBodies: ExtendedObject3D[] = []\r\n  protected earlierDetectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n  protected gravity: { x: number; y: number; z: number }\r\n\r\n  protected tmpEuler: Euler\r\n  protected tmpQuaternion: Quaternion\r\n  protected tmpVector3: Vector3\r\n  protected tmpVector3a: Vector3\r\n  protected tmpMatrix4: Matrix4\r\n  protected tmpMatrix4a: Matrix4\r\n  protected tmpBtVector3: Ammo.btVector3\r\n  protected tmpBtQuaternion: Ammo.btQuaternion\r\n\r\n  public physicsWorld: Ammo.btSoftRigidDynamicsWorld\r\n  protected debugDrawer: DebugDrawer\r\n  private convexBreaker: any\r\n  protected addRigidBody: (threeObject: ExtendedObject3D, physicsShape: any, mass: any, pos: any, quat: any) => void\r\n  private objectsToRemove: any[]\r\n  private numObjectsToRemove: number\r\n\r\n  protected emptyV3: Vector3\r\n  protected impactPoint: Vector3\r\n  protected impactNormal: Vector3\r\n\r\n  protected defaultMaterial: DefaultMaterial\r\n\r\n  private shapes: Shapes\r\n  private constraints: Constraints\r\n  public collisionEvents: CollisionEvents\r\n\r\n  private readonly complexShapes = ['plane', 'hull', 'hacd', 'vhacd', 'convexMesh', 'concaveMesh']\r\n\r\n  constructor(public scene: Scene | 'headless', public config: Types.ThreeGraphicsConfig = {}) {\r\n    super()\r\n\r\n    this.gravity = config.gravity || { x: 0, y: -9.81, z: 0 }\r\n    this.isHeadless = scene === 'headless' ? true : false\r\n\r\n    this.tmpEuler = new Euler()\r\n    this.tmpQuaternion = new Quaternion()\r\n    this.tmpVector3 = new Vector3()\r\n    this.tmpVector3a = new Vector3()\r\n    this.tmpMatrix4 = new Matrix4()\r\n    this.tmpMatrix4a = new Matrix4()\r\n    this.tmpBtVector3 = new Ammo.btVector3()\r\n    this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    this.emptyV3 = new Vector3()\r\n    this.impactPoint = new Vector3()\r\n    this.impactNormal = new Vector3()\r\n\r\n    if (scene !== 'headless') {\r\n      this.defaultMaterial = new DefaultMaterial()\r\n\r\n      // const info = `Ammo.js physics provided by enable3d`\r\n      // console.log(\r\n      //   `%c %c %c %c %c ${info} %c https://enable3d.io/`,\r\n      //   'background: #ff0000',\r\n      //   'background: #ffff00',\r\n      //   'background: #00ff00',\r\n      //   'background: #00ffff',\r\n      //   'color: #fff; background: #000000;',\r\n      //   'background: none'\r\n      // )\r\n    }\r\n\r\n    this.start()\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  get tmpTrans() {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    return this.worldTransform\r\n  }\r\n\r\n  /** @deprecated Use worldTransform instead of tmpTrans. */\r\n  set tmpTrans(transform: Ammo.btTransform) {\r\n    console.warn('Use worldTransform instead of tmpTrans.')\r\n    this.worldTransform = transform\r\n  }\r\n\r\n  /** Destroys a physics body. */\r\n  public destroy(body: PhysicsBody | ExtendedObject3D | ExtendedMesh) {\r\n    // @ts-ignore\r\n    const b: PhysicsBody = Object.keys(body).includes('body') ? body.body : body\r\n\r\n    if (typeof b?.ammo === 'undefined') return\r\n\r\n    // @ts-ignore\r\n    const name = b.ammo.name\r\n    // @ts-ignore\r\n    let obj: ExtendedObject3D | null = b.ammo.threeObject as ExtendedObject3D\r\n\r\n    if (name && obj) {\r\n      if (obj?.body?.ammo) {\r\n        // remove from physics world\r\n        !obj.body.isSoftBody\r\n          ? this.physicsWorld.removeRigidBody(obj.body.ammo)\r\n          : this.physicsWorld.removeSoftBody(obj.body.ammo as any)\r\n\r\n        // call destructor on body\r\n        obj.body.destructor()\r\n\r\n        // reset properties\r\n        // @ts-ignore\r\n        obj.body = undefined\r\n        obj.hasBody = false\r\n\r\n        // remove from this.objectAmmo\r\n        // @ts-ignore\r\n        delete b.ammo.threeObject\r\n        // remove from this.rigidBodies\r\n        for (let i = 0; i < this.rigidBodies.length; i++) {\r\n          if (this.rigidBodies[i].name === name) {\r\n            this.rigidBodies.splice(i, 1)\r\n            i--\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.scene === 'headless' && obj) obj = null\r\n  }\r\n\r\n  protected setup() {\r\n    // add worldTransform\r\n    this.worldTransform = new Ammo.btTransform()\r\n\r\n    // setup ammo physics\r\n    if (typeof this.config.setupPhysicsWorld === 'function') this.physicsWorld = this.config.setupPhysicsWorld() as any\r\n    else this.physicsWorld = this.setupPhysicsWorld()\r\n\r\n    if (this.scene !== 'headless') {\r\n      // Initialize convexBreaker\r\n      // @ts-ignore\r\n      this.convexBreaker = new ConvexObjectBreaker()\r\n\r\n      this.objectsToRemove = []\r\n      this.numObjectsToRemove = 0\r\n      for (let i = 0; i < 500; i++) {\r\n        this.objectsToRemove[i] = null\r\n      }\r\n    }\r\n\r\n    this.collisionEvents = new CollisionEvents()\r\n    this.factory = new Factories(this.scene)\r\n    this.shapes = new Shapes(this.factory, (object: ExtendedObject3D, config?: Types.AddExistingConfig) =>\r\n      this.addExisting(object, config)\r\n    )\r\n    this.constraints = new Constraints(this.worldTransform, this.physicsWorld)\r\n\r\n    if (this.scene !== 'headless') this.debugDrawer = new DebugDrawer(this.scene, this.physicsWorld, {})\r\n  }\r\n\r\n  public updateDebugger() {\r\n    if (this.scene === 'headless') return\r\n\r\n    if (this.debugDrawer && this.debugDrawer.enabled) this.debugDrawer.update()\r\n  }\r\n\r\n  protected setupPhysicsWorld() {\r\n    const g = this.gravity\r\n    const { softBodies = false } = this.config\r\n\r\n    let physicsWorld: any\r\n\r\n    if (!softBodies) {\r\n      const collisionConfiguration = new Ammo.btDefaultCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver()\r\n      physicsWorld = new Ammo.btDiscreteDynamicsWorld(dispatcher, broadphase, solver, collisionConfiguration)\r\n    }\r\n\r\n    if (softBodies) {\r\n      const collisionConfiguration = new Ammo.btSoftBodyRigidBodyCollisionConfiguration(),\r\n        dispatcher = new Ammo.btCollisionDispatcher(collisionConfiguration),\r\n        broadphase = new Ammo.btDbvtBroadphase(),\r\n        solver = new Ammo.btSequentialImpulseConstraintSolver(),\r\n        softBodySolver = new Ammo.btDefaultSoftBodySolver()\r\n      physicsWorld = new Ammo.btSoftRigidDynamicsWorld(\r\n        dispatcher,\r\n        broadphase,\r\n        solver,\r\n        collisionConfiguration,\r\n        softBodySolver\r\n      )\r\n    }\r\n\r\n    physicsWorld.setGravity(new Ammo.btVector3(g.x, g.y, g.z))\r\n    return physicsWorld\r\n  }\r\n\r\n  private createDebrisFromBreakableObject(object: ExtendedObject3D, parent: ExtendedObject3D) {\r\n    if (this.scene === 'headless') return\r\n\r\n    object.material = parent.material\r\n    object.shape = 'hull'\r\n    object.fragmentDepth = parent.fragmentDepth + 1\r\n\r\n    // Add the object to the scene\r\n    this.scene.add(object)\r\n\r\n    // Add physics to the object\r\n    // @ts-ignore\r\n    this.addExisting(object)\r\n\r\n    object.body.fractureImpulse = parent.body.fractureImpulse\r\n    object.body.breakable = false\r\n    // make this fragment breakable in 2.5seconds\r\n    setTimeout(() => {\r\n      object.body.breakable = true\r\n    }, 2500)\r\n  }\r\n\r\n  private removeDebris(object: any) {\r\n    if (this.scene === 'headless') return\r\n\r\n    this.scene.remove(object)\r\n    this.destroy(object)\r\n  }\r\n\r\n  public update(delta: number) {\r\n    this.updatePhysics(delta)\r\n    this.detectCollisions()\r\n  }\r\n\r\n  private updatePhysics(delta: number) {\r\n    // step world\r\n    const deltaTime = delta / 1000\r\n\r\n    // must always satisfy the equation timeStep < maxSubSteps * fixedTimeStep\r\n    this.physicsWorld.stepSimulation(deltaTime, this.config.maxSubSteps || 4, this.config.fixedTimeStep || 1 / 60)\r\n\r\n    // update rigid bodies\r\n    for (let i = 0; i < this.rigidBodies.length; i++) {\r\n      const objThree = this.rigidBodies[i]\r\n      const objPhys = objThree.body.ammo\r\n      const ms = objPhys.getMotionState()\r\n\r\n      if (ms) {\r\n        ms.getWorldTransform(this.worldTransform)\r\n\r\n        // check if object did an update since last call\r\n        if (objThree.body.didUpdate) {\r\n          // @ts-ignore\r\n          if (objThree.body._emitUpdateEvents) objThree.body.eventEmitter.emit('update')\r\n          objThree.body.didUpdate = false\r\n        }\r\n\r\n        // update positions\r\n        if (objThree.body.ammo.isKinematicObject() && objThree.body.needUpdate) {\r\n          // get position and rotation\r\n          objThree.getWorldQuaternion(this.tmpQuaternion)\r\n          objThree.getWorldPosition(this.tmpVector3)\r\n          // adjust tmp variables\r\n          this.tmpBtVector3.setValue(this.tmpVector3.x, this.tmpVector3.y, this.tmpVector3.z)\r\n          this.tmpBtQuaternion.setValue(\r\n            this.tmpQuaternion.x,\r\n            this.tmpQuaternion.y,\r\n            this.tmpQuaternion.z,\r\n            this.tmpQuaternion.w\r\n          )\r\n          // set position and rotation\r\n          this.worldTransform.setOrigin(this.tmpBtVector3)\r\n          this.worldTransform.setRotation(this.tmpBtQuaternion)\r\n          // set transform\r\n          ms.setWorldTransform(this.worldTransform)\r\n          // reset needsUpdate\r\n          objThree.body.needUpdate = false\r\n        } else if (objThree.body.skipUpdate) {\r\n          // do nothing ...\r\n        } else if (!objThree.body.ammo.isStaticObject()) {\r\n          // get position and rotation\r\n          let p = this.worldTransform.getOrigin()\r\n          let q = this.worldTransform.getRotation()\r\n          // body offset\r\n          let o = objThree.body.offset\r\n          // set position and rotation\r\n          if (objThree.body.ignoreScale) {\r\n            this.tmpVector3a.set(objThree.scale.x, objThree.scale.y, objThree.scale.z)\r\n          } else {\r\n            const scale = objThree.body.ammo.getCollisionShape().getLocalScaling()\r\n            this.tmpVector3a.set(scale.x(), scale.y(), scale.z())\r\n          }\r\n          this.tmpVector3.set(p.x() + o.x, p.y() + o.y, p.z() + o.z)\r\n          this.tmpQuaternion.set(q.x(), q.y(), q.z(), q.w())\r\n          this.tmpMatrix4.compose(this.tmpVector3, this.tmpQuaternion, this.tmpVector3a)\r\n          if (objThree.parent) {\r\n            // compatibility fix for three.js >= r123 (Dezember 2020)\r\n            // @ts-ignore\r\n            if (parseInt(REVISION) >= 123) this.tmpMatrix4a.copy(objThree.parent.matrixWorld).invert()\r\n            else this.tmpMatrix4a.getInverse(objThree.parent.matrixWorld)\r\n          } else {\r\n            this.tmpMatrix4a.identity()\r\n          }\r\n          this.tmpMatrix4a.multiply(this.tmpMatrix4)\r\n          this.tmpMatrix4a.decompose(objThree.position, objThree.quaternion, objThree.scale)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private detectCollisions() {\r\n    const detectedCollisions: { combinedName: string; collision: boolean }[] = []\r\n\r\n    // reset these vectors\r\n    this.impactPoint.set(0, 0, 0)\r\n    this.impactNormal.set(0, 0, 0)\r\n\r\n    const dispatcher = this.physicsWorld.getDispatcher()\r\n    const numManifolds = dispatcher.getNumManifolds()\r\n\r\n    // check collisions\r\n    for (let i = 0; i < numManifolds; i++) {\r\n      let contactManifold = dispatcher.getManifoldByIndexInternal(i)\r\n      let numContacts = contactManifold.getNumContacts()\r\n\r\n      // @ts-ignore\r\n      const rb0 = Ammo.castObject(contactManifold.getBody0(), Ammo.btRigidBody)\r\n      // @ts-ignore\r\n      const rb1 = Ammo.castObject(contactManifold.getBody1(), Ammo.btRigidBody)\r\n\r\n      let threeObject0 = rb0.threeObject as ExtendedObject3D\r\n      let threeObject1 = rb1.threeObject as ExtendedObject3D\r\n\r\n      if (!threeObject0 || !threeObject1) {\r\n        continue\r\n      }\r\n\r\n      // do not check collision between 2 unnamed objects\r\n      // (fragments do not have a name, for example)\r\n      if (rb0.name === '' && rb1.name === '') continue\r\n\r\n      /**\r\n       * Get some information\r\n       */\r\n\r\n      const checkCollisions0 = threeObject0.body?.checkCollisions\r\n      const checkCollisions1 = threeObject1.body?.checkCollisions\r\n\r\n      const breakable0 = threeObject0.body.breakable\r\n      const breakable1 = threeObject1.body.breakable\r\n\r\n      const fractureImpulse0 = threeObject0.body.fractureImpulse\r\n      const fractureImpulse1 = threeObject1.body.fractureImpulse\r\n\r\n      const checkCollisions = checkCollisions0 || checkCollisions1\r\n      const checkBreakable = breakable0 || breakable1\r\n\r\n      if (!checkCollisions && !checkBreakable) continue\r\n\r\n      let contact = false\r\n      let maxImpulse = 0\r\n\r\n      let event: Types.CollisionEvent = 'start'\r\n\r\n      for (let j = 0; j < numContacts; j++) {\r\n        const contactPoint = contactManifold.getContactPoint(j)\r\n        const distance = contactPoint.getDistance()\r\n\r\n        // Distance definition: when the distance between objects is positive, they are separated. When the distance is negative, they are penetrating. Zero distance means exactly touching.\r\n        // https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=5831\r\n        if (distance <= 0) {\r\n          contact = true\r\n          const impulse = contactPoint.getAppliedImpulse()\r\n          const impactPoint = contactPoint.get_m_positionWorldOnB()\r\n          const impactNormal = contactPoint.get_m_normalWorldOnB()\r\n\r\n          // handle collision events\r\n          if (checkCollisions0 || checkCollisions1) {\r\n            const names = [threeObject0.name, threeObject1.name].sort()\r\n            const combinedName = `${names[0]}__${names[1]}`\r\n\r\n            if (this.earlierDetectedCollisions.find(el => el.combinedName === combinedName)) event = 'collision'\r\n\r\n            if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n              detectedCollisions.push({ combinedName, collision: true })\r\n              this.collisionEvents.emit('collision', { bodies: [threeObject0, threeObject1], event })\r\n            }\r\n          }\r\n\r\n          // get impactPoint and impactNormal of the hight impulse point (for breakable objects)\r\n          if (impulse >= maxImpulse) {\r\n            maxImpulse = impulse\r\n            // get what ween need for the convex breaking\r\n            if (breakable0 || breakable1) {\r\n              this.impactPoint.set(impactPoint.x(), impactPoint.y(), impactPoint.z())\r\n              this.impactNormal.set(impactNormal.x(), impactNormal.y(), impactNormal.z())\r\n            }\r\n          }\r\n\r\n          break\r\n        }\r\n      }\r\n\r\n      // if no point has contact, abort\r\n      if (!contact) continue\r\n\r\n      // if no objects are breakable, abort\r\n      if (!checkBreakable) continue\r\n\r\n      /**\r\n       * check for breakable objects (subdivision)\r\n       */\r\n      const MAX_FRAGMENT_DEPTH = 2\r\n\r\n      // since the library convexBreaker makes use of three's userData.ammoPhysicsData\r\n      // we have to clone the necessary params to threeObjectX.userData.ammoPhysicsData\r\n      // TODO improve this\r\n\r\n      this.emptyV3.set(0, 0, 0)\r\n      threeObject0.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable0,\r\n        physicsBody: rb0\r\n      }\r\n      threeObject1.userData.ammoPhysicsData = {\r\n        mass: 1,\r\n        velocity: this.emptyV3,\r\n        angularVelocity: this.emptyV3,\r\n        breakable: breakable1,\r\n        physicsBody: rb1\r\n      }\r\n\r\n      // threeObject0\r\n      if (breakable0 && maxImpulse > fractureImpulse0 && threeObject0.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject0, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb0.getLinearVelocity()\r\n          const angVel = rb0.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject0)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject0\r\n      }\r\n\r\n      // threeObject1\r\n      if (breakable1 && maxImpulse > fractureImpulse1 && threeObject1.fragmentDepth < MAX_FRAGMENT_DEPTH) {\r\n        const debris = this.convexBreaker.subdivideByImpact(threeObject1, this.impactPoint, this.impactNormal, 1, 2) //, 1.5)\r\n\r\n        const numObjects = debris.length\r\n        for (let j = 0; j < numObjects; j++) {\r\n          const vel = rb1.getLinearVelocity()\r\n          const angVel = rb1.getAngularVelocity()\r\n          const fragment = debris[j] as ExtendedObject3D\r\n          fragment.userData.ammoPhysicsData.velocity.set(vel.x(), vel.y(), vel.z())\r\n          fragment.userData.ammoPhysicsData.angularVelocity.set(angVel.x(), angVel.y(), angVel.z())\r\n\r\n          this.createDebrisFromBreakableObject(fragment, threeObject1)\r\n        }\r\n\r\n        this.objectsToRemove[this.numObjectsToRemove++] = threeObject1\r\n      }\r\n    }\r\n\r\n    // remove objects\r\n    for (let i = 0; i < this.numObjectsToRemove; i++) {\r\n      this.removeDebris(this.objectsToRemove[i])\r\n    }\r\n    this.numObjectsToRemove = 0\r\n\r\n    // handle collision end events\r\n    this.earlierDetectedCollisions.forEach(el => {\r\n      const { combinedName } = el\r\n      if (!detectedCollisions.find(el => el.combinedName === combinedName)) {\r\n        const split = combinedName.split('__')\r\n        const obj0 = this.rigidBodies.find(obj => obj.name === split[0])\r\n        const obj1 = this.rigidBodies.find(obj => obj.name === split[1])\r\n        const event = 'end'\r\n        if (obj0 && obj1) this.collisionEvents.emit('collision', { bodies: [obj0, obj1], event })\r\n      }\r\n    })\r\n    this.earlierDetectedCollisions = [...detectedCollisions]\r\n  }\r\n\r\n  public setGravity(x = 0, y = -9.8, z = 0) {\r\n    this.tmpBtVector3.setValue(x, y, z)\r\n    this.physicsWorld.setGravity(this.tmpBtVector3)\r\n  }\r\n\r\n  public get debug() {\r\n    if (this.isHeadless) return null\r\n\r\n    return {\r\n      enable: () => {\r\n        this.debugDrawer.enable()\r\n      },\r\n      mode: (debugMode: number = 1) => {\r\n        this.debugDrawer.setDebugMode(debugMode)\r\n      },\r\n      disable: () => {\r\n        this.debugDrawer.disable()\r\n      }\r\n    }\r\n  }\r\n\r\n  private start() {\r\n    if (typeof Ammo === 'undefined') {\r\n      logger('Are you sure you included ammo.js?')\r\n      return\r\n    }\r\n\r\n    if (typeof Ammo === 'function')\r\n      Ammo().then(() => {\r\n        this.setup()\r\n      })\r\n    else this.setup()\r\n  }\r\n\r\n  public get add() {\r\n    return {\r\n      collider: (\r\n        object1: ExtendedObject3D,\r\n        object2: ExtendedObject3D,\r\n        eventCallback: (event: Types.CollisionEvent) => void\r\n      ) => this.collisionEvents.addCollider(object1, object2, eventCallback),\r\n      constraints: this.constraints.addConstraints,\r\n      existing: (object: ExtendedObject3D, config?: Types.AddExistingConfig) => this.addExisting(object, config),\r\n      plane: (planeConfig: Types.PlaneConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addPlane(planeConfig, materialConfig),\r\n      sphere: (sphereConfig: Types.SphereConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addSphere(sphereConfig, materialConfig),\r\n      ground: (groundConfig: Types.GroundConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addGround(groundConfig, materialConfig),\r\n      box: (boxConfig: Types.BoxConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addBox(boxConfig, materialConfig),\r\n      cylinder: (cylinderConfig: Types.CylinderConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCylinder(cylinderConfig, materialConfig),\r\n      cone: (coneConfig: Types.ConeConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addCone(coneConfig, materialConfig),\r\n      torus: (torusConfig: Types.TorusConfig = {}, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addTorus(torusConfig, materialConfig),\r\n      extrude: (extrudeConfig: Types.ExtrudeConfig, materialConfig: Types.MaterialConfig = {}) =>\r\n        this.shapes.addExtrude(extrudeConfig, materialConfig),\r\n      /**\r\n       * Creates a new Raycaster\r\n       * @param type Returns only the closes body by default. Can be 'closest' or 'allHits'.\r\n       */\r\n      raycaster: (type = 'closest') => {\r\n        if (type === 'closest') return new ClosestRaycaster(this) as ClosestRaycaster\r\n        else return new AllHitsRaycaster(this) as AllHitsRaycaster\r\n      }\r\n    }\r\n  }\r\n\r\n  private prepareThreeObjectForCollisionShape(object: ExtendedObject3D, config: Types.AddExistingConfig = {}) {\r\n    const { autoCenter = false } = config\r\n\r\n    // set default params\r\n    const defaultParams = {\r\n      width: 1,\r\n      height: 1,\r\n      depth: 1,\r\n      radius: 1,\r\n      radiusTop: 1, // for the cylinder\r\n      radiusBottom: 1, // for the cylinder\r\n      tube: 0.4, // for the torus\r\n      tubularSegments: 6 // for the torus\r\n    }\r\n\r\n    // determine the shape (fallback to hacd)\r\n    let shape: string = 'unknown'\r\n    // retrieve the shape from the geometry\r\n    const type = object.geometry?.type || 'unknown'\r\n    if (/box/i.test(type)) shape = 'box'\r\n    else if (/cone/i.test(type)) shape = 'cone'\r\n    else if (/cylinder/i.test(type)) shape = 'cylinder'\r\n    else if (/extrude/i.test(type)) shape = 'extrude'\r\n    else if (/plane/i.test(type)) shape = 'plane'\r\n    else if (/sphere/i.test(type)) shape = 'sphere'\r\n    else if (/torus/i.test(type)) shape = 'torus'\r\n\r\n    // @ts-ignore\r\n    let params = { ...defaultParams, ...object?.geometry?.parameters }\r\n\r\n    if (config.shape) {\r\n      params = { ...defaultParams, ...config }\r\n      shape = config.shape\r\n    } else if (object.shape) {\r\n      shape = object.shape\r\n    }\r\n\r\n    // Add all default params if undefined\r\n    Object.keys(params).forEach(key => {\r\n      // @ts-ignore\r\n      if (typeof params[key] === 'undefined' && defaultParams[key]) {\r\n        // @ts-ignore\r\n        params[key] = defaultParams[key]\r\n      }\r\n    })\r\n\r\n    // auto adjust the center for custom shapes\r\n    if (autoCenter) object.geometry.center()\r\n\r\n    // adjust the cylinder radius for its physcis body\r\n    if (shape === 'cylinder') params.radius = config.radius || params.radiusTop\r\n\r\n    // some aliases\r\n    if (shape === 'extrude') shape = 'hacd'\r\n    if (shape === 'mesh' || shape === 'convex') shape = 'convexMesh'\r\n    if (shape === 'concave') shape = 'concaveMesh'\r\n\r\n    // if we have not found a shape until here, we fallback to 'box'\r\n    if (shape === 'unknown') {\r\n      logger(`Shape for ${object?.name} not recognized! Will fallback to box.`)\r\n      shape = 'box'\r\n    }\r\n\r\n    return { shape, params, object }\r\n  }\r\n\r\n  public createCollisionShape(shape: string, params: any, object?: ExtendedObject3D): Ammo.btCollisionShape {\r\n    const quat = object?.quaternion ? object?.quaternion : new Quaternion(0, 0, 0, 1)\r\n    const { axis = 'y' } = params\r\n\r\n    const btHalfExtents = new Ammo.btVector3()\r\n\r\n    // transform geometry to bufferGeometry (because three-to-ammo works only with bufferGeometry)\r\n    // @ts-ignore\r\n    const geometry = object?.geometry as Geometry\r\n    if (object && geometry?.isGeometry) {\r\n      // @ts-ignore\r\n      object.geometry = new BufferGeometry().fromGeometry(geometry)\r\n    }\r\n\r\n    // prepare data to pass to three-to-ammo.js\r\n    const extractData = (object: any) => {\r\n      const matrixWorld = new Matrix4().elements\r\n      const vertices: any[] = []\r\n      const matrices: any[] = []\r\n      const indexes: any[] = []\r\n      iterateGeometries(object, {}, (vertexArray: any, matrixArray: any, indexArray: any) => {\r\n        vertices.push(vertexArray)\r\n        matrices.push(matrixArray)\r\n        indexes.push(indexArray)\r\n      })\r\n\r\n      return { vertices, matrices, indexes, matrixWorld }\r\n    }\r\n\r\n    let d = {} as any\r\n    // extract data for complex shapes generated with three-to-ammo.js\r\n    if (this.complexShapes.indexOf(shape) !== -1) d = extractData(object)\r\n\r\n    let collisionShape\r\n    switch (shape) {\r\n      case 'box':\r\n        btHalfExtents.setValue(params.width / 2, params.height / 2, params.depth / 2)\r\n        collisionShape = new Ammo.btBoxShape(btHalfExtents)\r\n        break\r\n      case 'sphere':\r\n        collisionShape = new Ammo.btSphereShape(params.radius)\r\n        break\r\n      case 'cylinder':\r\n        switch (axis) {\r\n          case 'y':\r\n            btHalfExtents.setValue(params.radius, params.height / 2, params.radius)\r\n            collisionShape = new Ammo.btCylinderShape(btHalfExtents)\r\n            break\r\n          case 'x':\r\n            btHalfExtents.setValue(params.height / 2, params.radius, params.radius)\r\n            collisionShape = new Ammo.btCylinderShapeX(btHalfExtents)\r\n            break\r\n          case 'z':\r\n            btHalfExtents.setValue(params.radius, params.radius, params.height / 2)\r\n            collisionShape = new Ammo.btCylinderShapeZ(btHalfExtents)\r\n            break\r\n        }\r\n        break\r\n      case 'cone':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btConeShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btConeShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btConeShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'capsule':\r\n        switch (axis) {\r\n          case 'y':\r\n            collisionShape = new Ammo.btCapsuleShape(params.radius, params.height)\r\n            break\r\n          case 'x':\r\n            collisionShape = new Ammo.btCapsuleShapeX(params.radius, params.height)\r\n            break\r\n          case 'z':\r\n            collisionShape = new Ammo.btCapsuleShapeZ(params.radius, params.height)\r\n            break\r\n        }\r\n        break\r\n      case 'torus':\r\n        collisionShape = createTorusShape(params, quat)\r\n        break\r\n      case 'plane':\r\n        // uses a triMeshShape for the plane\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'hull':\r\n        collisionShape = createHullShape(d.vertices, d.matrices, d.matrixWorld, params)\r\n        break\r\n      case 'hacd':\r\n        collisionShape = createHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'vhacd':\r\n        collisionShape = createVHACDShapes(d.vertices, d.matrices, d.indexes, d.matrixWorld, params)\r\n        break\r\n      case 'convexMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: false\r\n        })\r\n        break\r\n      case 'concaveMesh':\r\n        collisionShape = createTriMeshShape(d.vertices, d.matrices, d.indexes, d.matrixWorld, {\r\n          ...params,\r\n          concave: true\r\n        })\r\n        break\r\n    }\r\n\r\n    Ammo.destroy(btHalfExtents)\r\n\r\n    // if there is a x, y or z, take is as temporary offset parameter\r\n    const { x, y, z } = params\r\n    if (x || y || z) {\r\n      // @ts-ignore\r\n      collisionShape.offset = { x: x || 0, y: y || 0, z: z || 0 }\r\n    }\r\n\r\n    // in some cases, like hacd, it will be an array of shapes\r\n    // so we merge them\r\n    if (Array.isArray(collisionShape)) collisionShape = this.mergeCollisionShapesToCompoundShape(collisionShape)\r\n\r\n    return collisionShape as Ammo.btCollisionShape\r\n  }\r\n\r\n  public mergeCollisionShapesToCompoundShape(collisionShapes: Ammo.btCollisionShape[]): Ammo.btCompoundShape {\r\n    const compoundShape = new Ammo.btCompoundShape()\r\n    collisionShapes.forEach(shape => {\r\n      // @ts-ignore\r\n      const { offset } = shape // offset is a custom parameter\r\n\r\n      const transform = new Ammo.btTransform()\r\n      transform.setIdentity()\r\n      if (offset) transform.getOrigin().setValue(offset.x || 0, offset.y || 0, offset.z || 0)\r\n      compoundShape.addChildShape(transform, shape)\r\n    })\r\n    return compoundShape\r\n  }\r\n\r\n  protected addExisting(object: ExtendedObject3D, config: Types.AddExistingConfig = {}): any {\r\n    const { hasBody } = object\r\n    if (hasBody) {\r\n      console.warn(`[Enable3d]: Object \"${object.name}\" already has a physical body!`)\r\n      return\r\n    }\r\n\r\n    const pos = new Vector3()\r\n    const quat = new Quaternion()\r\n    const scale = new Vector3()\r\n    object.getWorldPosition(pos)\r\n    object.getWorldQuaternion(quat)\r\n    object.getWorldScale(scale)\r\n\r\n    const isStaticObject = (config.collisionFlags || 0).toString(2).slice(-1) === '1'\r\n    const isKinematicObject = (config.collisionFlags || 0).toString(2).slice(-2, -1) === '1'\r\n\r\n    const {\r\n      shape = 'unknown',\r\n      compound = [],\r\n      mass = isStaticObject || isKinematicObject ? 0 : 1, // set default mass of 0 for static objects, and 1 for all other objects\r\n      collisionFlags = 0,\r\n      collisionGroup = 1,\r\n      collisionMask = -1,\r\n      offset = undefined,\r\n      breakable = false,\r\n      addChildren = true,\r\n      margin = 0.01,\r\n      ignoreScale = false,\r\n      fractureImpulse = 1\r\n    } = config\r\n\r\n    if (ignoreScale) scale.set(1, 1, 1)\r\n\r\n    if (compound.length >= 1) {\r\n      // if we want a custom compound shape, we simply do\r\n      const collisionShapes = compound.map((s: any) => this.createCollisionShape(s.shape, s))\r\n      const compoundShape = this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n      const localTransform = this.finishCollisionShape(compoundShape, pos, quat, scale, margin)\r\n      const rigidBody = this.collisionShapeToRigidBody(compoundShape, localTransform, mass, isKinematicObject)\r\n      this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\r\n      object.body.breakable = breakable\r\n      object.body.fractureImpulse = fractureImpulse\r\n      object.body.ignoreScale = ignoreScale\r\n      return\r\n    }\r\n\r\n    const collisionShapes: Ammo.btCollisionShape[] = []\r\n\r\n    // if object is a THREE.Group, object does not have a mesh\r\n    if (shape !== 'unknown' || object.isMesh) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    // check if the object has children\r\n    if (shape === 'unknown' && addChildren && object.children.length >= 1) {\r\n      object.children.forEach((child: any) => {\r\n        if (child.isMesh) {\r\n          const p = this.prepareThreeObjectForCollisionShape(child)\r\n          const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n          // @ts-ignore\r\n          cs.offset = child.position.clone() // this is relative position to its parent\r\n          collisionShapes.push(cs)\r\n        }\r\n      })\r\n    }\r\n\r\n    // FALLBACK: if we do not have any collisionShapes yet, add a simple box as a fallback\r\n    if (collisionShapes.length === 0) {\r\n      const p = this.prepareThreeObjectForCollisionShape(object, config)\r\n      const cs = this.createCollisionShape(p.shape, p.params, p.object)\r\n      collisionShapes.push(cs)\r\n    }\r\n\r\n    const collisionShape =\r\n      collisionShapes.length === 1 ? collisionShapes[0] : this.mergeCollisionShapesToCompoundShape(collisionShapes)\r\n\r\n    // add rigid body\r\n    // object.position.copy(pos)\r\n    // object.quaternion.copy(quat)\r\n\r\n    const localTransform = this.finishCollisionShape(collisionShape, pos, quat, scale, margin)\r\n    const rigidBody = this.collisionShapeToRigidBody(collisionShape, localTransform, mass, isKinematicObject)\r\n\r\n    this.addRigidBodyToWorld(object, rigidBody, collisionFlags, collisionGroup, collisionMask, offset)\r\n    object.body.breakable = breakable\r\n    object.body.fractureImpulse = fractureImpulse\r\n    object.body.ignoreScale = ignoreScale\r\n  }\r\n\r\n  public addRigidBodyToWorld(\r\n    object: ExtendedObject3D,\r\n    rigidBody: Ammo.btRigidBody,\r\n    collisionFlags: number,\r\n    collisionGroup: number,\r\n    collisionMask: number,\r\n    offset?: { x?: number; y?: number; z?: number }\r\n  ) {\r\n    this.rigidBodies.push(object)\r\n    this.physicsWorld.addRigidBody(rigidBody, collisionGroup, collisionMask)\r\n\r\n    const ptr = Object.values(rigidBody)[0]\r\n    // @ts-ignore\r\n    rigidBody.name = object.name\r\n    object.body = new PhysicsBody(this, rigidBody)\r\n    object.hasBody = true\r\n    // @ts-ignore\r\n    object.ptr = ptr\r\n    // @ts-ignore\r\n    rigidBody.threeObject = object\r\n\r\n    if (offset) object.body.offset = { x: 0, y: 0, z: 0, ...offset }\r\n\r\n    object.body.setCollisionFlags(collisionFlags)\r\n  }\r\n\r\n  public finishCollisionShape(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    pos: Vector3,\r\n    quat: Quaternion,\r\n    scale: Vector3,\r\n    margin: number\r\n  ) {\r\n    collisionShape.setMargin(margin)\r\n\r\n    const rotation = new Ammo.btQuaternion(0, 0, 0, 1)\r\n    rotation.setValue(quat.x, quat.y, quat.z, quat.w)\r\n\r\n    const localTransform = new Ammo.btTransform()\r\n    localTransform.setIdentity()\r\n    localTransform.getOrigin().setValue(pos.x, pos.y, pos.z)\r\n    localTransform.setRotation(rotation)\r\n\r\n    Ammo.destroy(rotation)\r\n\r\n    const localScale = new Ammo.btVector3(scale.x, scale.y, scale.z)\r\n    collisionShape.setLocalScaling(localScale)\r\n    Ammo.destroy(localScale)\r\n\r\n    return localTransform\r\n  }\r\n\r\n  public collisionShapeToRigidBody(\r\n    collisionShape: Ammo.btCollisionShape,\r\n    localTransform: Ammo.btTransform,\r\n    mass: number,\r\n    disableDeactivation: boolean\r\n  ) {\r\n    const motionState = new Ammo.btDefaultMotionState(localTransform)\r\n    const localInertia = new Ammo.btVector3(0, 0, 0)\r\n    if (mass > 0) collisionShape.calculateLocalInertia(mass, localInertia)\r\n    const rbInfo = new Ammo.btRigidBodyConstructionInfo(mass, motionState, collisionShape, localInertia)\r\n    const rigidBody = new Ammo.btRigidBody(rbInfo)\r\n    if (mass > 0 || disableDeactivation) rigidBody.setActivationState(4) // Disable deactivation\r\n    return rigidBody\r\n  }\r\n}\r\n\r\nexport { AmmoPhysics }\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport {\r\n  SphereConfig,\r\n  MaterialConfig,\r\n  BoxConfig,\r\n  GroundConfig,\r\n  CylinderConfig,\r\n  ExtendedObject3D,\r\n  ExtrudeConfig,\r\n  TorusConfig,\r\n  AddExistingConfig,\r\n  PlaneConfig,\r\n  ConeConfig\r\n} from '@enable3d/common/dist/types'\r\nimport Factories from '@enable3d/common/dist/factories'\r\n\r\nclass Shapes {\r\n  constructor(\r\n    private factory: Factories,\r\n    private addExisting: (object: ExtendedObject3D, config?: AddExistingConfig) => void\r\n  ) {}\r\n\r\n  public addPlane(planeConfig: PlaneConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const plane = this.factory.add.plane(planeConfig, materialConfig)\r\n    this.addExisting(plane, planeConfig)\r\n    return plane\r\n  }\r\n\r\n  public addSphere(sphereConfig: SphereConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const sphere = this.factory.add.sphere(sphereConfig, materialConfig)\r\n    this.addExisting(sphere, sphereConfig)\r\n    return sphere\r\n  }\r\n\r\n  public addBox(boxConfig: BoxConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const box = this.factory.add.box(boxConfig, materialConfig)\r\n    this.addExisting(box, boxConfig)\r\n    return box\r\n  }\r\n\r\n  public addGround(groundConfig: GroundConfig, materialConfig: MaterialConfig = {}) {\r\n    const ground = this.factory.add.ground(groundConfig, materialConfig)\r\n    const config = { ...groundConfig, mass: 0, collisionFlags: 1 }\r\n    this.addExisting(ground, config)\r\n    return ground\r\n  }\r\n\r\n  public addCylinder(cylinderConfig: CylinderConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cylinder = this.factory.add.cylinder(cylinderConfig, materialConfig)\r\n    this.addExisting(cylinder, cylinderConfig)\r\n    return cylinder\r\n  }\r\n\r\n  public addCone(coneConfig: ConeConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const cone = this.factory.add.cone(coneConfig, materialConfig)\r\n    this.addExisting(cone, coneConfig)\r\n    return cone\r\n  }\r\n\r\n  public addTorus(torusConfig: TorusConfig = {}, materialConfig: MaterialConfig = {}) {\r\n    const torus = this.factory.add.torus(torusConfig, materialConfig)\r\n    this.addExisting(torus, torusConfig)\r\n    return torus\r\n  }\r\n\r\n  public addExtrude(extrudeConfig: ExtrudeConfig, materialConfig: MaterialConfig = {}) {\r\n    const object = this.factory.add.extrude(extrudeConfig, materialConfig)\r\n    object.translateX(1)\r\n    this.addExisting(object)\r\n    return object\r\n  }\r\n}\r\n\r\nexport default Shapes\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @description  This is a modified version of the original code from Kevin Lee\r\n */\r\n\r\n/**\r\n * @author       Kevin Lee (https://github.com/InfiniteLee)\r\n * @copyright    Copyright (c) 2019 Kevin Lee; Project Url: https://github.com/InfiniteLee/ammo-debug-drawer\r\n * @license      {@link https://github.com/InfiniteLee/ammo-debug-drawer/blob/master/LICENSE|MPL-2.0}\r\n */\r\n\r\nimport { Scene, BufferGeometry, BufferAttribute, LineBasicMaterial, LineSegments, StaticDrawUsage } from 'three'\r\n\r\nconst AmmoDebugConstants = {\r\n  NoDebug: 0,\r\n  DrawWireframe: 1,\r\n  DrawAabb: 2,\r\n  DrawFeaturesText: 4,\r\n  DrawContactPoints: 8,\r\n  NoDeactivation: 16,\r\n  NoHelpText: 32,\r\n  DrawText: 64,\r\n  ProfileTimings: 128,\r\n  EnableSatComparison: 256,\r\n  DisableBulletLCP: 512,\r\n  EnableCCD: 1024,\r\n  DrawConstraints: 1 << 11, //2048\r\n  DrawConstraintLimits: 1 << 12, //4096\r\n  FastWireframe: 1 << 13, //8192\r\n  DrawNormals: 1 << 14, //16384\r\n  DrawOnTop: 1 << 15, //32768\r\n  MAX_DEBUG_DRAW_MODE: 0xffffffff\r\n}\r\n\r\n/**\r\n * An implementation of the btIDebugDraw interface in Ammo.js, for debug rendering of Ammo shapes\r\n */\r\nclass DebugDrawer {\r\n  debugDrawMode: number\r\n  geometry: BufferGeometry\r\n  index: number\r\n  mesh: LineSegments\r\n  enabled: boolean\r\n  debugDrawer: Ammo.DebugDrawer\r\n  warnedOnce: boolean\r\n  constructor(public scene: Scene, public world: Ammo.btCollisionWorld, public options: any = {}) {\r\n    this.debugDrawMode = options.debugDrawMode || AmmoDebugConstants.DrawWireframe\r\n    const drawOnTop = this.debugDrawMode & AmmoDebugConstants.DrawOnTop || false\r\n    const maxBufferSize = options.maxBufferSize || 1000000\r\n\r\n    this.geometry = new BufferGeometry()\r\n    const vertices = new Float32Array(maxBufferSize * 3)\r\n    const colors = new Float32Array(maxBufferSize * 3)\r\n\r\n    /*\r\n    I do not know the difference, just using the first one.\r\n    export const StaticDrawUsage: Usage;\r\n    export const DynamicDrawUsage: Usage;\r\n    export const StreamDrawUsage: Usage;\r\n    export const StaticReadUsage: Usage;\r\n    export const DynamicReadUsage: Usage;\r\n    export const StreamReadUsage: Usage;\r\n    export const StaticCopyUsage: Usage;\r\n    export const DynamicCopyUsage: Usage;\r\n    export const StreamCopyUsage: Usage;\r\n     */\r\n    this.geometry.setAttribute('position', new BufferAttribute(vertices, 3).setUsage(StaticDrawUsage))\r\n    this.geometry.setAttribute('color', new BufferAttribute(colors, 3).setUsage(StaticDrawUsage))\r\n\r\n    this.index = 0\r\n\r\n    const material = new LineBasicMaterial({\r\n      vertexColors: true,\r\n      depthTest: !drawOnTop\r\n    })\r\n\r\n    this.mesh = new LineSegments(this.geometry, material)\r\n    if (drawOnTop) this.mesh.renderOrder = 999\r\n    this.mesh.frustumCulled = false\r\n\r\n    this.enabled = false\r\n\r\n    this.debugDrawer = new Ammo.DebugDrawer()\r\n    this.debugDrawer.drawLine = this.drawLine.bind(this)\r\n    this.debugDrawer.drawContactPoint = this.drawContactPoint.bind(this)\r\n    this.debugDrawer.reportErrorWarning = this.reportErrorWarning.bind(this)\r\n    this.debugDrawer.draw3dText = this.draw3dText.bind(this)\r\n    this.debugDrawer.setDebugMode = this.setDebugMode.bind(this)\r\n    this.debugDrawer.getDebugMode = this.getDebugMode.bind(this)\r\n\r\n    this.world.setDebugDrawer(this.debugDrawer)\r\n  }\r\n\r\n  enable() {\r\n    this.enabled = true\r\n    this.scene.add(this.mesh)\r\n  }\r\n\r\n  disable() {\r\n    this.enabled = false\r\n    this.scene.remove(this.mesh)\r\n  }\r\n\r\n  update() {\r\n    if (!this.enabled) {\r\n      return\r\n    }\r\n\r\n    if (this.index != 0) {\r\n      // @ts-ignore\r\n      this.geometry.attributes.position.needsUpdate = true\r\n      // @ts-ignore\r\n      this.geometry.attributes.color.needsUpdate = true\r\n    }\r\n\r\n    this.index = 0\r\n    this.world.debugDrawWorld()\r\n    this.geometry.setDrawRange(0, this.index)\r\n  }\r\n\r\n  drawLine(from: any, to: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const fromX = heap[(from + 0) / 4]\r\n    const fromY = heap[(from + 4) / 4]\r\n    const fromZ = heap[(from + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, fromX, fromY, fromZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const toX = heap[(to + 0) / 4]\r\n    const toY = heap[(to + 4) / 4]\r\n    const toZ = heap[(to + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, toX, toY, toZ)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  //TODO: figure out how to make lifeTime work\r\n  drawContactPoint(pointOnB: any, normalOnB: any, distance: any, _lifeTime: any, color: any) {\r\n    // @ts-ignore\r\n    const heap = Ammo.HEAPF32\r\n    const r = heap[(color + 0) / 4]\r\n    const g = heap[(color + 4) / 4]\r\n    const b = heap[(color + 8) / 4]\r\n\r\n    const x = heap[(pointOnB + 0) / 4]\r\n    const y = heap[(pointOnB + 4) / 4]\r\n    const z = heap[(pointOnB + 8) / 4]\r\n    this.geometry.attributes.position.setXYZ(this.index, x, y, z)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n\r\n    const dx = heap[(normalOnB + 0) / 4] * distance\r\n    const dy = heap[(normalOnB + 4) / 4] * distance\r\n    const dz = heap[(normalOnB + 8) / 4] * distance\r\n    this.geometry.attributes.position.setXYZ(this.index, x + dx, y + dy, z + dz)\r\n    this.geometry.attributes.color.setXYZ(this.index++, r, g, b)\r\n  }\r\n\r\n  reportErrorWarning(warningString: string) {\r\n    if (Ammo.hasOwnProperty('Pointer_stringify')) {\r\n      // @ts-ignore\r\n      console.warn(Ammo.Pointer_stringify(warningString))\r\n    } else if (!this.warnedOnce) {\r\n      this.warnedOnce = true\r\n      console.warn(\"Cannot print warningString, please rebuild Ammo.js using 'debug' flag\")\r\n    }\r\n  }\r\n\r\n  draw3dText(_location: any, _textString: any) {\r\n    //TODO\r\n    console.warn('TODO: draw3dText')\r\n  }\r\n\r\n  setDebugMode(debugMode: any) {\r\n    this.debugDrawMode = debugMode\r\n  }\r\n\r\n  getDebugMode() {\r\n    return this.debugDrawMode\r\n  }\r\n}\r\n\r\nexport default DebugDrawer\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\n\r\nimport { Quaternion } from 'three'\r\n\r\n// https://pybullet.org/Bullet/phpBB3/viewtopic.php?t=7228\r\nexport const createTorusShape = (\r\n  config: { radius: number; tube: number; tubularSegments: number },\r\n  quat: Quaternion\r\n) => {\r\n  const { radius = 1, tube = 0.4, tubularSegments = 8 } = config\r\n\r\n  const SIMD_PI = Math.PI\r\n  const subdivisions = tubularSegments\r\n  const gap = Math.sqrt(2.0 * tube * tube - 2.0 * tube * tube * Math.cos((2.0 * SIMD_PI) / subdivisions))\r\n\r\n  const btHalfExtents = new Ammo.btVector3(tube, SIMD_PI / subdivisions + 0.5 * gap, tube)\r\n  const cylinderShape = new Ammo.btCylinderShape(btHalfExtents)\r\n  cylinderShape.setMargin(0.05)\r\n\r\n  const compoundShape = new Ammo.btCompoundShape()\r\n\r\n  const forward = new Ammo.btVector3(0, 0, 1)\r\n  const side = new Ammo.btVector3(0, radius, 0)\r\n  const rotation = new Ammo.btQuaternion(quat.x, quat.y, quat.z, quat.w)\r\n\r\n  for (let x = 0; x < subdivisions; x++) {\r\n    const angle = (x * 2.0 * SIMD_PI) / subdivisions\r\n    const position = side.rotate(forward, angle)\r\n    const transform = new Ammo.btTransform()\r\n    rotation.setRotation(forward, angle + Math.PI / 2)\r\n    transform.setIdentity()\r\n    transform.setOrigin(position)\r\n    transform.setRotation(rotation)\r\n    compoundShape.addChildShape(transform, cylinderShape)\r\n  }\r\n\r\n  return compoundShape\r\n}\r\n","/**\r\n * @author       Yannick Deubel (https://github.com/yandeu)\r\n * @copyright    Copyright (c) 2020 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d\r\n * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}\r\n */\r\nimport { EventEmitter } from 'eventemitter3';\r\nimport { Euler, Quaternion } from 'three';\r\nclass PhysicsBody {\r\n    constructor(physics, ammo) {\r\n        this.physics = physics;\r\n        this.ammo = ammo;\r\n        this.ignoreScale = false;\r\n        this.isSoftBody = false;\r\n        this.offset = { x: 0, y: 0, z: 0 };\r\n        this.errors = [];\r\n        this.checkCollisions = false;\r\n        this.breakable = false;\r\n        this.fractureImpulse = 1;\r\n        this.didUpdate = false;\r\n        /** Skip syncing the mesh to the physics body. */\r\n        this.skipUpdate = false;\r\n        this._emitUpdateEvents = false;\r\n        this._needUpdate = false;\r\n        this.tmpEuler = new Euler();\r\n        this.tmpQuaternion = new Quaternion();\r\n        this.tmpBtVector3 = new Ammo.btVector3();\r\n        this.tmpBtVector3_1 = new Ammo.btVector3();\r\n        this.tmpBtQuaternion = new Ammo.btQuaternion(0, 0, 0, 1);\r\n        this.eventEmitter = new EventEmitter();\r\n        // @ts-ignore\r\n        this.name = ammo.name;\r\n    }\r\n    /**\r\n     * Don't call this manually! Do physics.destroy() instead.\r\n     */\r\n    destructor() {\r\n        // remove events\r\n        if (this.eventEmitter)\r\n            this.eventEmitter.removeAllListeners();\r\n        // destroy tmp ammo values\r\n        Ammo.destroy(this.tmpBtVector3);\r\n        Ammo.destroy(this.tmpBtVector3_1);\r\n        Ammo.destroy(this.tmpBtQuaternion);\r\n        // destory collision shape\r\n        Ammo.destroy(this.ammo.getCollisionShape());\r\n        // destroy body\r\n        Ammo.destroy(this.ammo);\r\n    }\r\n    setupEventEmitter() {\r\n        if (typeof this.eventEmitter === 'undefined')\r\n            this.eventEmitter = new EventEmitter();\r\n    }\r\n    get needUpdate() {\r\n        return this._needUpdate;\r\n    }\r\n    set needUpdate(need) {\r\n        if (!need && this._needUpdate)\r\n            this.didUpdate = true;\r\n        this._needUpdate = need;\r\n    }\r\n    onUpdateEvent(updateCallback, once = false) {\r\n        this.setupEventEmitter();\r\n        this._emitUpdateEvents = true;\r\n        if (once)\r\n            this.eventEmitter.once('update', () => {\r\n                updateCallback();\r\n            });\r\n        else\r\n            this.eventEmitter.on('update', () => {\r\n                updateCallback();\r\n            });\r\n    }\r\n    get on() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback),\r\n            collision: (collisionCallback) => this.onCollision(collisionCallback)\r\n        };\r\n    }\r\n    get once() {\r\n        return {\r\n            update: (updateCallback) => this.onUpdateEvent(updateCallback, true)\r\n        };\r\n    }\r\n    onCollision(collisionCallback) {\r\n        this.checkCollisions = true;\r\n        this.physics.collisionEvents.on('collision', (data) => {\r\n            const { bodies, event } = data;\r\n            if (bodies[0].name === this.name)\r\n                collisionCallback(bodies[1], event);\r\n            else if (bodies[1].name === this.name)\r\n                collisionCallback(bodies[0], event);\r\n        });\r\n    }\r\n    /** You have to call transform() before you can get or set the body's position or rotation. (for headless mode only) */\r\n    transform() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().getWorldTransform(t);\r\n    }\r\n    /** You have to call refresh() after you set the position or rotation of the body. (for headless mode only) */\r\n    refresh() {\r\n        const t = this.physics.worldTransform;\r\n        this.ammo.getMotionState().setWorldTransform(t);\r\n    }\r\n    /** Set the rotation in radians. (for headless mode only) */\r\n    setRotation(x, y, z) {\r\n        const e = this.tmpEuler.set(x, y, z);\r\n        const q = this.tmpQuaternion.set(0, 0, 0, 1);\r\n        q.setFromEuler(e);\r\n        this.tmpBtQuaternion.setValue(0, 0, 0, 1);\r\n        const ammoQuat = this.tmpBtQuaternion;\r\n        ammoQuat.setValue(q.x, q.y, q.z, q.w);\r\n        const t = this.physics.worldTransform;\r\n        t.setRotation(ammoQuat);\r\n    }\r\n    /** Get the rotation in radians. (for headless mode only) */\r\n    get rotation() {\r\n        // https://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n        let x, y, z;\r\n        const t = this.physics.worldTransform;\r\n        const ammoQuat = t.getRotation();\r\n        let q1 = this.tmpQuaternion.set(ammoQuat.x(), ammoQuat.y(), ammoQuat.z(), ammoQuat.w());\r\n        if (q1.w > 1)\r\n            q1 = q1.normalize(); // if w>1 acos and sqrt will produce errors, this cant happen if quaternion is normalized\r\n        const angle = 2 * Math.acos(q1.w);\r\n        const s = Math.sqrt(1 - q1.w * q1.w); // assuming quaternion normalized then w is less than 1, so term always positive.\r\n        if (s < 0.001) {\r\n            // test to avoid divide by zero, s is always positive due to sqrt\r\n            // if s close to zero then direction of axis not important\r\n            x = q1.x; // if it is important that axis is normalized then replace with x=1; y=z=0;\r\n            y = q1.y;\r\n            z = q1.z;\r\n        }\r\n        else {\r\n            x = q1.x / s; // normalized axis\r\n            y = q1.y / s;\r\n            z = q1.z / s;\r\n        }\r\n        return { x: x * angle, y: y * angle, z: z * angle };\r\n    }\r\n    /** Get the quaternion. (for headless mode only) */\r\n    get quaternion() {\r\n        const t = this.physics.worldTransform;\r\n        const q = t.getRotation();\r\n        return { x: q.x(), y: q.y(), z: q.z(), w: q.w() };\r\n    }\r\n    /** Set position. (for headless mode only) */\r\n    setPosition(x, y, z) {\r\n        const t = this.physics.worldTransform;\r\n        t.getOrigin().setValue(x, y, z);\r\n    }\r\n    /** Get position. (for headless mode only) */\r\n    get position() {\r\n        const t = this.physics.worldTransform;\r\n        return { x: t.getOrigin().x(), y: t.getOrigin().y(), z: t.getOrigin().z() };\r\n    }\r\n    get velocity() {\r\n        return {\r\n            x: this.ammo.getLinearVelocity().x(),\r\n            y: this.ammo.getLinearVelocity().y(),\r\n            z: this.ammo.getLinearVelocity().z()\r\n        };\r\n    }\r\n    get angularVelocity() {\r\n        return {\r\n            x: this.ammo.getAngularVelocity().x(),\r\n            y: this.ammo.getAngularVelocity().y(),\r\n            z: this.ammo.getAngularVelocity().z()\r\n        };\r\n    }\r\n    setVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.velocity.y, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, value, this.velocity.z);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.velocity.x, this.velocity.y, value);\r\n        this.ammo.setLinearVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityX(value) {\r\n        this.tmpBtVector3.setValue(value, this.angularVelocity.y, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityY(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, value, this.angularVelocity.z);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    setAngularVelocityZ(value) {\r\n        this.tmpBtVector3.setValue(this.angularVelocity.x, this.angularVelocity.y, value);\r\n        this.ammo.setAngularVelocity(this.tmpBtVector3);\r\n    }\r\n    // Apply Force methods\r\n    applyForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceX(value) {\r\n        this.tmpBtVector3.setValue(value, 0, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceY(value) {\r\n        this.tmpBtVector3.setValue(0, value, 0);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyForceZ(value) {\r\n        this.tmpBtVector3.setValue(0, 0, value);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    // Apply \"Something\" Methods\r\n    applyCentralForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralForce(this.tmpBtVector3);\r\n    }\r\n    applyCentralImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralImpulse(this.tmpBtVector3);\r\n    }\r\n    applyCentralLocalForce(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyCentralLocalForce(this.tmpBtVector3);\r\n    }\r\n    applyImpulse(impulse, relativePosition) {\r\n        this.tmpBtVector3.setValue(impulse.x || 0, impulse.y || 0, impulse.z || 0);\r\n        this.tmpBtVector3_1.setValue(relativePosition.x || 0, relativePosition.y || 0, relativePosition.z || 0);\r\n        this.ammo.applyImpulse(this.tmpBtVector3, this.tmpBtVector3_1);\r\n    }\r\n    applyLocalTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyLocalTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorque(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorque(this.tmpBtVector3);\r\n    }\r\n    applyTorqueImpulse(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.applyTorqueImpulse(this.tmpBtVector3);\r\n    }\r\n    /**\r\n     * Add the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    // https://github.com/bulletphysics/bullet3/blob/aae8048722f2596f7e2bdd52d2a1dcb52a218f2b/src/BulletCollision/CollisionDispatch/btCollisionObject.h#L128\r\n    setCollisionFlags(value) {\r\n        this.ammo.setCollisionFlags(value);\r\n    }\r\n    /**\r\n     * Get the collision flags\r\n     * @param value 0 is DYNAMIC, 1 is STATIC, 2 is KINEMATIC, 4 GHOST\r\n     */\r\n    getCollisionFlags() {\r\n        return this.ammo.getCollisionFlags();\r\n    }\r\n    /**\r\n     * Set the restitution (same as bounciness)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setRestitution(value) {\r\n        this.ammo.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the bounciness (same as restitution)\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setBounciness(value) {\r\n        this.setRestitution(value);\r\n    }\r\n    /**\r\n     * Set the friction\r\n     * @param value A number from 0 to 1.\r\n     */\r\n    setFriction(value) {\r\n        this.ammo.setFriction(value);\r\n    }\r\n    /**\r\n     * Set the linear and angular damping\r\n     * @param linear A number from 0 to 1.\r\n     * @param angular A number from 0 to 1.\r\n     */\r\n    setDamping(linear, angular) {\r\n        this.ammo.setDamping(linear, angular);\r\n    }\r\n    /** Set per body gravity */\r\n    setGravity(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setGravity(this.tmpBtVector3);\r\n    }\r\n    setLinearFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setLinearFactor(this.tmpBtVector3);\r\n    }\r\n    setAngularFactor(x, y, z) {\r\n        this.tmpBtVector3.setValue(x, y, z);\r\n        this.ammo.setAngularFactor(this.tmpBtVector3);\r\n    }\r\n    setCcdMotionThreshold(threshold) {\r\n        this.ammo.setCcdMotionThreshold(threshold);\r\n    }\r\n    setCcdSweptSphereRadius(radius) {\r\n        this.ammo.setCcdSweptSphereRadius(radius);\r\n    }\r\n}\r\nexport default PhysicsBody;\r\n//# sourceMappingURL=physicsBody.js.map"],"sourceRoot":""}